{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Dm8J-NbMnGHl3gwWCxoPQRPOpyi1eJar","timestamp":1672043212438}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"T4eK37tCGgnJ"},"outputs":[],"source":["import numpy as np\n","\n","# Библиотеки PyTorch\n","import torch \n","import torch.nn as nn # готовые слои (как в Keras)\n","import torch.utils.data as data # работа с загрузчиком данных\n","from torch.autograd import Variable # для автоматического дифференциатора"]},{"cell_type":"markdown","source":["# Тенсоры - основные понятия"],"metadata":{"id":"-c1JUFUnIHZI"}},{"cell_type":"code","source":["# Созданим и выведем тенсоры различных видов\n","\n","# 1) Скалярный тенсор\n","x = torch.tensor(7.)\n","print(x)\n","\n","# 2) Одномерный тенсор (список) типа Float\n","y = torch.FloatTensor([7.3])\n","print(y)\n","\n","# 3) Создание списка заданной длины, заполненного произвольными числами\n","z = torch.FloatTensor(8)\n","print(z)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"omIGnJ8QIMBy","executionInfo":{"status":"ok","timestamp":1672039270314,"user_tz":-180,"elapsed":3,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"ad7bb84d-ec63-4941-96ac-c89e4003fe9d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(7.)\n","tensor([7.3000])\n","tensor([3.2005e-34, 0.0000e+00, 3.9236e-44, 0.0000e+00,        nan, 0.0000e+00,\n","        1.3733e-14, 1.2102e+25])\n"]}]},{"cell_type":"code","source":["# В тенсорах используются такие же срезы, как и в Nupy\n","print(z[0])   # Вывод нулевого элемента\n","print(z[::2]) # Вывод каждого второго элемента"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"48wQ5hTdIw4Z","executionInfo":{"status":"ok","timestamp":1672039336322,"user_tz":-180,"elapsed":263,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"3df9108f-6c52-4691-9c55-0532228aa82a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(3.2005e-34)\n","tensor([3.2005e-34, 3.9236e-44,        nan, 1.3733e-14])\n"]}]},{"cell_type":"code","source":["# Информация о тензоре\n","print(\"Тенсор x:\")\n","print(\"Размерность тезора:    \", x.dim())\n","print(\"Количество элементов:  \", x.size())\n","print(\"Тип элементов:         \", x.type())\n","print(\"Место тенсора в памяти:\", x.data_ptr())\n","\n","print(\"\\nТенсор y:\")\n","print(\"Размерность тезора:    \", y.dim())\n","print(\"Количество элементов:  \", y.size())\n","print(\"Тип элементов:         \", y.type())\n","print(\"Место тенсора в памяти:\", y.data_ptr())\n","\n","print(\"\\nТенсор z:\")\n","print(\"Размерность тезора:    \", z.dim())\n","print(\"Количество элементов:  \", z.size())\n","print(\"Тип элементов:         \", z.type())\n","print(\"Место тенсора в памяти:\", z.data_ptr())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0CMFE0jWJFKN","executionInfo":{"status":"ok","timestamp":1672039365043,"user_tz":-180,"elapsed":284,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"ea5493aa-492b-4a2f-ad4e-bae6642af7c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Тенсор x:\n","Размерность тезора:     0\n","Количество элементов:   torch.Size([])\n","Тип элементов:          torch.FloatTensor\n","Место тенсора в памяти: 131380032\n","\n","Тенсор y:\n","Размерность тезора:     1\n","Количество элементов:   torch.Size([1])\n","Тип элементов:          torch.FloatTensor\n","Место тенсора в памяти: 131380096\n","\n","Тенсор z:\n","Размерность тезора:     1\n","Количество элементов:   torch.Size([8])\n","Тип элементов:          torch.FloatTensor\n","Место тенсора в памяти: 131380416\n"]}]},{"cell_type":"markdown","source":["Immutable и Mutable функции"],"metadata":{"id":"NhFJZofCKAL2"}},{"cell_type":"code","source":["# Immutable функция\n","\n","row  = torch.IntTensor([-1, 2, -3]) # Создаем тензор\n","rowa = row.abs()\n","print(\"row  =\", row, \"  место в памяти: \", row.data_ptr())\n","print(\"rowa =\", rowa, \"     место в памяти: \", rowa.data_ptr())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C-K8LV1dJ9iJ","executionInfo":{"status":"ok","timestamp":1672039463172,"user_tz":-180,"elapsed":251,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"e01e73dd-c4bf-44a2-8dbb-8d9b0f701713"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["row  = tensor([-1,  2, -3], dtype=torch.int32)   место в памяти:  131380544\n","rowa = tensor([1, 2, 3], dtype=torch.int32)      место в памяти:  131380288\n"]}]},{"cell_type":"code","source":["# Mutable функция\n","\n","rowm  = torch.IntTensor([-1, 2, -3]) # Создаем тензор\n","rowma = rowm.abs_()\n","print(\"rowm  =\", rowm, \"  место в памяти: \", rowm.data_ptr())\n","print(\"rowam =\", rowma, \"  место в памяти: \", rowma.data_ptr())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_b85jM7DLW1E","executionInfo":{"status":"ok","timestamp":1672039503800,"user_tz":-180,"elapsed":250,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"1f9b7afb-4424-46ab-8ac9-c163c8921bf4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["rowm  = tensor([1, 2, 3], dtype=torch.int32)   место в памяти:  131380352\n","rowam = tensor([1, 2, 3], dtype=torch.int32)   место в памяти:  131380352\n"]}]},{"cell_type":"markdown","source":["Каскадное выполнение функций"],"metadata":{"id":"9m3WGmUARVSZ"}},{"cell_type":"code","source":["# Каскады функций благодаря Mutable\n","\n","# Вариант 1\n","x = torch.FloatTensor(2, 3) # Создаем тенсор\n","x.zero_() # Заполняем тенсор нулями\n","print(x)\n","print()\n","\n","# Вариант 2 - каскад\n","x = torch.FloatTensor(2, 3).zero_() # Одновременно создаем тенсор и заполняем нулями\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EG8bWAH2RYAE","executionInfo":{"status":"ok","timestamp":1672039631519,"user_tz":-180,"elapsed":7,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"2457aea6-531d-4f4e-f08f-776053d87536"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0., 0., 0.],\n","        [0., 0., 0.]])\n","\n","tensor([[0., 0., 0.],\n","        [0., 0., 0.]])\n"]}]},{"cell_type":"markdown","source":["Варианты сложения тенсоров"],"metadata":{"id":"ucOYZbxjTteg"}},{"cell_type":"code","source":["# Сложение скалярных тенсоров\n","\n","x = torch.tensor(3.) # Создаем тензор\n","y = torch.tensor(7.) # Создаем тензор\n","\n","print(\"x:\", x)\n","print(\"y:\", y)\n","print()\n","\n","# Вариант 1\n","z1 = x.add(y)\n","\n","# Вариант 2\n","z2 = torch.add(x, y)\n","\n","# Вариант 3\n","x.add_(y) # Куда будет записан результат?\n","\n","\n","print(\"z1:\", z1)\n","print(\"z2:\", z2)\n","print(\"x: \", x)\n","print(\"y: \", y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nRIA_mozSSaW","executionInfo":{"status":"ok","timestamp":1672039844645,"user_tz":-180,"elapsed":268,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"3fd0b5b5-f262-4143-97ca-8cd9e87dfa0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x: tensor(3.)\n","y: tensor(7.)\n","\n","z1: tensor(10.)\n","z2: tensor(59.)\n","x:  tensor(10.)\n","y:  tensor(7.)\n"]}]},{"cell_type":"code","source":["# Сложение тенсоров через переопределение оператора +\n","\n","x = torch.tensor(3.)\n","y = torch.tensor(7.)\n","x += y\n","\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L5oMXDe4TMyW","executionInfo":{"status":"ok","timestamp":1672039873497,"user_tz":-180,"elapsed":273,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"e4e8029b-f2f0-4451-b868-dd1caa5bfda4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(10.)\n"]}]},{"cell_type":"markdown","source":["Взаимодействие Numpy и PyTorch"],"metadata":{"id":"x4Ny7J2eThUv"}},{"cell_type":"code","source":["a = np.random.rand(2, 2) # Сорздаем numpy массив размерностью 2 на 2 из случайных чисел\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MYKVvMBnTgZT","executionInfo":{"status":"ok","timestamp":1672039907000,"user_tz":-180,"elapsed":248,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"a1ba95a1-c586-44d2-e468-c530deb1a759"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.79479083, 0.78736936],\n","       [0.16669284, 0.55658497]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Преобразование из NumPy в PyTorch\n","b = torch.from_numpy(a)\n","b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XO2WYYe4UFbU","executionInfo":{"status":"ok","timestamp":1672039908939,"user_tz":-180,"elapsed":284,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"270deaa6-233b-4438-d32a-f7edbc226c62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.7948, 0.7874],\n","        [0.1667, 0.5566]], dtype=torch.float64)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Преобразование из PyTorch в NumPy\n","c = b.numpy()\n","c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HUpuXGm8USEc","executionInfo":{"status":"ok","timestamp":1672039932435,"user_tz":-180,"elapsed":250,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"62b01f3d-28f3-481a-a048-2144264e111a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.79479083, 0.78736936],\n","       [0.16669284, 0.55658497]])"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["# Работа с CUDA"],"metadata":{"id":"R7AgACBlUlCa"}},{"cell_type":"code","source":["!nvidia-smi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZPg80IOOUna5","executionInfo":{"status":"ok","timestamp":1672040009096,"user_tz":-180,"elapsed":1033,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"0a738513-5dae-40c5-dc30-d1cccca3f5b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Dec 26 07:33:29 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   68C    P0    33W /  70W |      0MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"code","source":["# Создадим тестовый тенсор\n","x = torch.FloatTensor([7.3, 6.5])\n","\n","# Проверка того, что данный тенсор размещен на видеокарте в CUDA\n","is_cuda = x.is_cuda\n","print(x, is_cuda)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lCjyUtHwUvjY","executionInfo":{"status":"ok","timestamp":1672040298765,"user_tz":-180,"elapsed":312,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"aedd37ae-5459-47bb-f34e-f3d792bf82fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([7.3000, 6.5000]) False\n"]}]},{"cell_type":"code","source":["# Перенос тенсора из обычной памяти в память видеокарты\n","\n","if not x.is_cuda: # Проверяем, что тенсор не в CUDA\n","  y = x.cuda()    # Размещаем на GPU (есть только Mutable-вариант этой функции)\n","print (y.is_cuda) # Проверям: размещен ли тензор на GPU"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3dWnA57VdKq","executionInfo":{"status":"ok","timestamp":1672040333998,"user_tz":-180,"elapsed":4658,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"4fe316ab-0f58-46e5-c8c5-fd323643622d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["# Выведем типы данных\n","print(\"Тип x:\", x.type())\n","print(\"Тип y:\", y.type())"],"metadata":{"id":"ZGFZBs59Wzad","executionInfo":{"status":"ok","timestamp":1672040346058,"user_tz":-180,"elapsed":564,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f693f343-3fdf-4043-8207-1682a7e37a3f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Тип x: torch.FloatTensor\n","Тип y: torch.cuda.FloatTensor\n"]}]},{"cell_type":"code","source":["c = x+y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":184},"id":"GjBHu0nBX2NT","executionInfo":{"status":"error","timestamp":1672040388908,"user_tz":-180,"elapsed":564,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"0fc581c9-5be6-4a21-82d4-cc5845179ba8"},"execution_count":null,"outputs":[{"output_type":"error","ename":"RuntimeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-facbad40bfe3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mRuntimeError\u001b[0m: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!"]}]},{"cell_type":"code","source":["!nvidia-smi"],"metadata":{"id":"WG_iZX69WV9X","executionInfo":{"status":"ok","timestamp":1672040480214,"user_tz":-180,"elapsed":327,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0b2e40f4-a7f2-4895-cfff-2fc99f2c22be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Dec 26 07:41:20 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   70C    P0    34W /  70W |    572MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"markdown","source":["# AD (automatic differentiation) - автоматическое дифференцирование"],"metadata":{"id":"AthUYuwxXOsj"}},{"cell_type":"code","source":["# Создаем тензоры и заполняем их значениями\n","x = torch.tensor(5.) # Входное неизменяемое значение\n","w = torch.tensor(2.) # Рандомное число для веса\n","b = torch.tensor(3.) # Рандомное число для смещения\n","\n","# Если мы вычислим значение Y, то получим:\n","# Y = 5*2 + 3 = 13\n","\n","# Создаем переменные для обучения. Укажем, какие значения являются изменяемыми, а какие - нет\n","x = Variable(x)\n","w = Variable(w, requires_grad=True)\n","b = Variable(b, requires_grad=True)"],"metadata":{"id":"gVYE23arXT28"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Строим вычислительный граф\n","y = w.mul(x).add(b)  # y = w * 5 + b\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7siTD9Tmdbr","executionInfo":{"status":"ok","timestamp":1672041180669,"user_tz":-180,"elapsed":4,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"7c63aa8f-2217-4920-ed02-e5cd5117ca42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(13., grad_fn=<AddBackward0>)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Альтернативный способ записи\n","ya = w*x+b\n","ya"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mft9L0IRmiNZ","executionInfo":{"status":"ok","timestamp":1672041199437,"user_tz":-180,"elapsed":318,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"d42e723c-b7f9-4235-e633-4170ac814583"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(13., grad_fn=<AddBackward0>)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Вычисляем градиент при обратном проходе (Нужно посчитать частные производные)\n","y.backward()\n","\n","# Посмотрим градиенты для каждого из задействованных тензоров\n","print(\"x\", x.grad)\n","print(\"w\", w.grad)\n","print(\"b\", b.grad)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xGiHxpFHnPyk","executionInfo":{"status":"ok","timestamp":1672041245808,"user_tz":-180,"elapsed":319,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"6e895baa-724e-4a41-f1d9-295cf02907c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x None\n","w tensor(5.)\n","b tensor(1.)\n"]}]},{"cell_type":"markdown","source":["# Напишем свой собственный нейрон"],"metadata":{"id":"BU3oz8_uog3v"}},{"cell_type":"code","source":["#x = torch.randn(1)\n","#y = torch.randn(1)\n","x = torch.FloatTensor([-0.6395])\n","y = torch.FloatTensor([-0.4799])\n","x = Variable(x)\n","y = Variable(y)\n","\n","print(\"x:\", x)\n","print(\"y:\", y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_SYegbJqonQD","executionInfo":{"status":"ok","timestamp":1672041423616,"user_tz":-180,"elapsed":331,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"287580f4-7643-48b2-e76d-c170aa8812b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x: tensor([-0.6395])\n","y: tensor([-0.4799])\n"]}]},{"cell_type":"code","source":["# Создаем 1 линейный слой \n","# Linear соответствует Dense-слою из библиотеки Keras\n","# 1-й параметр - количество входных элементов\n","# 2-й параметр - количество выходных элементов\n","\n","linear = nn.Linear(1, 1, bias = False)\n","print('Вес w: ', linear.weight)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LCSCaH_1pT_2","executionInfo":{"status":"ok","timestamp":1672042434386,"user_tz":-180,"elapsed":525,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"f73e8c68-0e71-4bf2-e6fb-84b1c7c6b7c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Вес w:  Parameter containing:\n","tensor([[0.4607]], requires_grad=True)\n"]}]},{"cell_type":"code","source":["-0.6395 * 0.4607"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gZE1YHB7qXpW","executionInfo":{"status":"ok","timestamp":1672042447879,"user_tz":-180,"elapsed":313,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"e219a066-ccb2-4ba9-f13d-84953718cd48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.29461764999999995"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Применяем слой для x (делаем prediction)\n","pred = linear(x)\n","print(pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z9ZppPVwqeL8","executionInfo":{"status":"ok","timestamp":1672042451349,"user_tz":-180,"elapsed":544,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"74b99367-f946-4b27-d59d-08e3d6cd0345"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([-0.2946], grad_fn=<SqueezeBackward3>)\n"]}]},{"cell_type":"code","source":["# Расчет среднеквадратичной ошибки\n","\n","(-0.2946 - (-0.4799))**2 / 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DhhwbtP_q-gc","executionInfo":{"status":"ok","timestamp":1672042464200,"user_tz":-180,"elapsed":592,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"239bfba6-1c61-4fdb-f90b-5d0d8653c2bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.03433609000000001"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["((-0.4799) - (-0.2946))**2 / 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p9PkLGgTd71T","executionInfo":{"status":"ok","timestamp":1672042483423,"user_tz":-180,"elapsed":303,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"bfc0610b-8df5-4acd-fdd7-80989a1f69c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.03433609000000001"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["# Расчет ошибки с помощью стандартной функции PyTorch\n","\n","criterion = nn.MSELoss() # Функция ошибки (средне-квадратичное отклонение)\n","# mse += (y - y_1)**2/n\n","# Считаем ошибку\n","loss = criterion(pred, y)\n","print('ошибка:', loss.item())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GdgR3XuTrmUm","executionInfo":{"status":"ok","timestamp":1672042488744,"user_tz":-180,"elapsed":11,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"a7666d8b-681a-4515-9280-f547f5f8afd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ошибка: 0.03433739021420479\n"]}]},{"cell_type":"code","source":["-2 * (-0.6395) *(-0.4799 - 0.4607 * (-0.6395))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qyMqu3uwx-wD","executionInfo":{"status":"ok","timestamp":1672042524972,"user_tz":-180,"elapsed":330,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"257cee28-37f4-4329-f0aa-abb4bba88006"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.23697612565000004"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Обратное распространение \n","loss.backward()\n","\n","# Посмотрим на наши градиенты\n","print ('DL/DW: ', linear.weight.grad)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gNwjSF-VyOyZ","executionInfo":{"status":"ok","timestamp":1672042529436,"user_tz":-180,"elapsed":304,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"79ef5c49-ea15-4aaf-cd78-d788654730ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DL/DW:  tensor([[-0.2370]])\n"]}]},{"cell_type":"markdown","source":["Используем оптимизатор"],"metadata":{"id":"Asm6g7-Yypbd"}},{"cell_type":"code","source":["# Создаем оптимизатор\n","optimizer = torch.optim.SGD(linear.parameters(), lr=0.01)\n","# первый - параметры нейронной сети\n","# второй - шаг при градиентном спуске"],"metadata":{"id":"Uw2UYFFJs5lh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["optimizer.param_groups"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7fCYSaCSseE5","executionInfo":{"status":"ok","timestamp":1672042871419,"user_tz":-180,"elapsed":324,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"b76a12c3-2e75-461e-d1c8-44506a38d7a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'params': [Parameter containing:\n","   tensor([[0.4607]], requires_grad=True)],\n","  'lr': 0.01,\n","  'momentum': 0,\n","  'dampening': 0,\n","  'weight_decay': 0,\n","  'nesterov': False,\n","  'maximize': False,\n","  'foreach': None,\n","  'differentiable': False}]"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Делаем один шаг (одну эпоху) градиентного спуска w = w - lr*grad\n","optimizer.step()\n","print(optimizer.param_groups)\n","\n","# Ошибка после оптимизации\n","pred = linear(x) \n","loss = criterion(pred, y)\n","print('ошибка после шага оптимизации: ', loss.item())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lia7ZXxVyuLV","executionInfo":{"status":"ok","timestamp":1672042933392,"user_tz":-180,"elapsed":347,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"bb0348e4-f47c-4115-d5e0-3a52c545a15d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[{'params': [Parameter containing:\n","tensor([[0.4630]], requires_grad=True)], 'lr': 0.01, 'momentum': 0, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'maximize': False, 'foreach': None, 'differentiable': False}]\n","ошибка после шага оптимизации:  0.03377798572182655\n"]}]},{"cell_type":"code","source":["# Сделаем 1000 шиклов оптимизации (1000 эпох)\n","for i in range(1000):\n","  # Вычислям результат\n","  pred = linear(x) \n","\n","  # Считаем функцию ошибки\n","  loss = criterion(pred, y)\n","\n","  # Обнуляем вручную градиент на каждой итерации\n","  optimizer.zero_grad()\n","\n","  # Выполняем обратное распространение ошибки\n","  loss.backward()\n","\n","  # Делаем шаг градиентного спуска\n","  optimizer.step()\n","\n","  if i%10 == 0:\n","    print(loss.detach()) # .detach() отделяет тензор от вычислительного графа. Используется всегда при выводе значений"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7KJTZWnDzAJ0","executionInfo":{"status":"ok","timestamp":1672043030942,"user_tz":-180,"elapsed":569,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"0ebb91f1-bf3a-4372-e0b3-c5c9a4e976cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(0.0338)\n","tensor(0.0287)\n","tensor(0.0243)\n","tensor(0.0206)\n","tensor(0.0175)\n","tensor(0.0149)\n","tensor(0.0126)\n","tensor(0.0107)\n","tensor(0.0091)\n","tensor(0.0077)\n","tensor(0.0065)\n","tensor(0.0055)\n","tensor(0.0047)\n","tensor(0.0040)\n","tensor(0.0034)\n","tensor(0.0029)\n","tensor(0.0024)\n","tensor(0.0021)\n","tensor(0.0018)\n","tensor(0.0015)\n","tensor(0.0013)\n","tensor(0.0011)\n","tensor(0.0009)\n","tensor(0.0008)\n","tensor(0.0007)\n","tensor(0.0006)\n","tensor(0.0005)\n","tensor(0.0004)\n","tensor(0.0003)\n","tensor(0.0003)\n","tensor(0.0002)\n","tensor(0.0002)\n","tensor(0.0002)\n","tensor(0.0001)\n","tensor(0.0001)\n","tensor(0.0001)\n","tensor(9.1316e-05)\n","tensor(7.7484e-05)\n","tensor(6.5747e-05)\n","tensor(5.5787e-05)\n","tensor(4.7335e-05)\n","tensor(4.0166e-05)\n","tensor(3.4082e-05)\n","tensor(2.8920e-05)\n","tensor(2.4539e-05)\n","tensor(2.0822e-05)\n","tensor(1.7668e-05)\n","tensor(1.4991e-05)\n","tensor(1.2720e-05)\n","tensor(1.0793e-05)\n","tensor(9.1580e-06)\n","tensor(7.7708e-06)\n","tensor(6.5939e-06)\n","tensor(5.5947e-06)\n","tensor(4.7476e-06)\n","tensor(4.0284e-06)\n","tensor(3.4182e-06)\n","tensor(2.9005e-06)\n","tensor(2.4611e-06)\n","tensor(2.0884e-06)\n","tensor(1.7720e-06)\n","tensor(1.5035e-06)\n","tensor(1.2759e-06)\n","tensor(1.0826e-06)\n","tensor(9.1867e-07)\n","tensor(7.7945e-07)\n","tensor(6.6147e-07)\n","tensor(5.6130e-07)\n","tensor(4.7628e-07)\n","tensor(4.0409e-07)\n","tensor(3.4288e-07)\n","tensor(2.9078e-07)\n","tensor(2.4676e-07)\n","tensor(2.0936e-07)\n","tensor(1.7766e-07)\n","tensor(1.5075e-07)\n","tensor(1.2792e-07)\n","tensor(1.0857e-07)\n","tensor(9.2116e-08)\n","tensor(7.8179e-08)\n","tensor(6.6302e-08)\n","tensor(5.6276e-08)\n","tensor(4.7760e-08)\n","tensor(4.0504e-08)\n","tensor(3.4395e-08)\n","tensor(2.9172e-08)\n","tensor(2.4761e-08)\n","tensor(2.1013e-08)\n","tensor(1.7834e-08)\n","tensor(1.5135e-08)\n","tensor(1.2832e-08)\n","tensor(1.0886e-08)\n","tensor(9.2433e-09)\n","tensor(7.8504e-09)\n","tensor(6.6535e-09)\n","tensor(5.6448e-09)\n","tensor(4.7929e-09)\n","tensor(4.0675e-09)\n","tensor(3.4504e-09)\n","tensor(2.9259e-09)\n"]}]},{"cell_type":"code","source":["# Выведем финальный вес\n","linear.weight"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PZk_fkjD3HhP","executionInfo":{"status":"ok","timestamp":1672043054121,"user_tz":-180,"elapsed":312,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"47aa3dc0-54b4-43df-ec8e-5b4331fdba2b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Parameter containing:\n","tensor([[0.7504]], requires_grad=True)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Предикт с использованием финального веса\n","pred = linear(x)\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wL04awjD3N_y","executionInfo":{"status":"ok","timestamp":1672043069804,"user_tz":-180,"elapsed":9,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"dc40daf2-3a7b-4def-df52-237aa890490f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([-0.4799], grad_fn=<SqueezeBackward3>)"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1xBND0mMiMub","executionInfo":{"status":"ok","timestamp":1672043097119,"user_tz":-180,"elapsed":456,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"b5c165ea-59de-41a6-ec75-1c37124999da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([-0.4799])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["x * linear.weight"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H5dPzUqhiQWh","executionInfo":{"status":"ok","timestamp":1672043129491,"user_tz":-180,"elapsed":12,"user":{"displayName":"Arkady Romanov","userId":"01213739122118825493"}},"outputId":"7b62dae0-a4bd-420a-e742-6623222d0d1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[-0.4799]], grad_fn=<MulBackward0>)"]},"metadata":{},"execution_count":41}]}]}