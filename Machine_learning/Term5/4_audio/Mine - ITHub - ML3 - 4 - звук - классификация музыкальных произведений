{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1hwjQxH8yREe6UsXrzsVOu-qg5ucPn857","timestamp":1669625473618}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"RRuD6H9aYIjm"},"outputs":[],"source":["from google.colab import files # Загрузка файлов\n","from tensorflow.keras.utils import to_categorical # Функция для представления в формате one_hot_encoding\n","from tensorflow.keras import utils # Для получения изображения структуры НС\n","\n","import os # Работа с папками и файлами\n","import librosa # Параметризация аудио\n","import numpy as np\n","import time # модуль time для подсчёта времени\n","from google.colab import drive\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.optimizers import Adam, RMSprop\n","from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import concatenate, Input, Dense, MaxPooling2D, Dropout, BatchNormalization, Flatten, Conv1D, Conv2D, LSTM\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder, StandardScaler"]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"id":"FGAKU_zWY6_w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669642488455,"user_tz":-180,"elapsed":23765,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"6b43e931-de6b-4eb9-87a3-0672cf0713ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# Подготовка Датасета"],"metadata":{"id":"EuD6E7CmVH2N"}},{"cell_type":"code","source":["# Важно: В датасете все песни по 5 секунд\n","!unzip -q '/content/drive/MyDrive/Colab Notebooks/Machine_learning/Term5/4_audio/genres.zip'"],"metadata":{"id":"stNVY2CmZJ2X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Функция получения параметров аудио-сигнала\n","def get_features(x, sr):\n","  chroma_stft = librosa.feature.chroma_stft(x, sr=sr) # Частота цветности\n","  mfcc = librosa.feature.mfcc(x, sr=sr) # Мел-кепстральные коэффициенты\n","  \n","  rmse = np.mean(librosa.feature.rms(x)) # Среднеквадратичная амплитуда\n","  spec_cent = np.mean(librosa.feature.spectral_centroid(x, sr=sr)) # Среднее спектральныго центроида\n","  spec_bw = np.mean(librosa.feature.spectral_bandwidth(x, sr=sr)) # Среднее ширины полосы частот\n","  rolloff = np.mean(librosa.feature.spectral_rolloff(x, sr=sr)) # Среднее спектрального спада частоты\n","  zcr = np.mean(librosa.feature.zero_crossing_rate(x)) # Средняя частота пересечения нуля звукового временного ряда\n","  chroma = librosa.feature.chroma_cens(x, sr=sr)  # Нормализованная энергия цветности - Chroma Energy Normalized (CENS)\n","  \n","  # Добавляем все параметры в один список\n","  out = [] # создаем пустой список\n","  out.append(rmse)      # добавляем среднеквадратичную амплитуду\n","  out.append(spec_cent) # добавляем спектральный центроид\n","  out.append(spec_bw)   # добавляем ширину полосы частот\n","  out.append(rolloff)   # добавляем спектральный спад частоты\n","  out.append(zcr)       # добавляем пересечение нуля\n","  out.append(chroma)    # добавляем Нормализованная энергия цветности\n","  \n","  # добавляем среднее всех Мел спектральных коэффициентов (20 значений)\n","  for e in mfcc:\n","    out.append(np.mean(e))\n","\n","  # добавляем среднее всех частот цветности (12 значений)\n","  for e in chroma_stft:\n","    out.append(np.mean(e))\n","  \n","  # Возвращаем 38 значений\n","  return out"],"metadata":{"id":"fd2ndV_1a5Ln"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Формирование обучающей выборки"],"metadata":{"id":"vHSjImZIbrnd"}},{"cell_type":"code","source":["\"\"\"\n","xTrain = []\n","yTrain = []\n","\n","# Получаем список всех жанров (названий поддиректорий)\n","genres = os.listdir('genres')\n","class_num = len(genres)\n","\n","\n","# Проходим по всем жарнам\n","for i in range(class_num):\n","  # Запоминаем время старта формирования выборки\n","  start_time = time.time()\n","  \n","  # Берём название текущего жанра\n","  g = genres[i] \n","\n","  # Проходим по файлам папки, соответствующей текущему жанру\n","  for filename in os.listdir(f'./genres/{g}'):\n","    # Получаем имя песни\n","    songname = f'./genres/{g}/{filename}'\n","\n","    # Загружаем аудиосигнал\n","    '''\n","    # x, sr = librosa.load(songname, mono=True, offset=20, duration=30)\n","    Для того, чтобы улучшить качество НС необходимо брать признаки \n","    Не из 30 секунд песни начиная с 20 секунды, а из нескольких мест по 5 секунд.\n","\n","    Для реализации.\n","\n","    # ВАЖНО: Когда выжимаешь из песни кусочки нельзя допустить, чтобы кусочки из одной песни попали как в обучающую, так и в проверочную выборки\n","    # Поэтому сналача необходимо отделить песни для проверочной выборки и для обучающей.\n","    # А потом производить выжимку кусочков.\n","\n","    1. Загрузить всю песню\n","    2. Получить её длину\n","    3. Поделить длину на 3 части (начало, середина, конец)\n","    4. Из каждой части взять по х секунд\n","    5. \n","    '''\n","\n","    x, sr = librosa.load(songname, mono=True, offset=20, duration=30)\n","    # x - массив семплов\n","    # sr - частота дискретизации\n","    # offset - сдвиг относительно начала. Будем загружать, начиная с 20-й секунды\n","    # duration - продолжительность открывка. Мы будем загружать по 30 секунд от каждого аудио-файла\n","\n","\n","    # Параметризуем аудио-сигнал\n","    out = get_features(x, sr)\n","    \n","    xTrain.append(out)\n","    yTrain.append(to_categorical(i, class_num))\n","\n","  # Выводим информацию о готовности обработки датасета\n","  print(g, \":\", round(time.time() - start_time), \"c\")\n","\n","\n","# Переводим данные в numpy массивы\n","xTrain = np.array(xTrain)\n","yTrain = np.array(yTrain)\n","\"\"\""],"metadata":{"id":"3wi498b8baqb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669626205382,"user_tz":-180,"elapsed":202368,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"0c4ae4b2-f249-4e4d-ca17-8fcd4edd8dd6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["reggae : 24 c\n","classical : 20 c\n","blues : 20 c\n","metal : 19 c\n","country : 19 c\n","disco : 22 c\n","hiphop : 20 c\n","jazz : 19 c\n","pop : 20 c\n","rock : 19 c\n"]}]},{"cell_type":"code","source":["\"\"\"\n","# Проверяем yTrain\n","y_train_class = np.argmax(yTrain, axis=1)\n","print(y_train_class)\n","print(len(y_train_class))\n","\"\"\""],"metadata":{"id":"jiwwdDyLXg5A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","# Выводим размерности обучающей выборки\n","print(\"xTrain:\", xTrain.shape)\n","print(\"yTrain:\", yTrain.shape)\n","\"\"\""],"metadata":{"id":"tzJvWLqmXj65"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Формирование расширенной обучающей выборки\n","Используя дробление файлов\n"],"metadata":{"id":"jS2KVxOxXGFy"}},{"cell_type":"code","source":["xTrain = []\n","yTrain = []\n","\n","xVal = []\n","yVal = []\n","\n","# Получаем список всех жанров (названий поддиректорий)\n","genres = os.listdir('genres')\n","class_num = len(genres)\n","\n","\n","# Проходим по всем жарнам\n","for i in range(class_num):\n","  # Запоминаем время старта формирования выборки\n","  start_time = time.time()\n","  \n","  # Берём название текущего жанра\n","  g = genres[i] \n","\n","  # Проходим по файлам папки, соответствующей текущему жанру\n","  \n","  fc = 0\n","  for filename in os.listdir(f'./genres/{g}'):\n","    # Получаем полное имя файла песни\n","    songname = f'./genres/{g}/{filename}'\n","\n","    # Загружаем аудиосигнал\n","    for start in [ 1, 7, 14, 20, 25 ]:\n","      x, sr = librosa.load(songname, mono=True, offset=start, duration=4)\n","\n","      # Параметризуем аудио-сигнал\n","      out = get_features(x, sr)\n","    \n","      if (fc < 90):\n","        xTrain.append(out)\n","        yTrain.append(to_categorical(i, class_num))\n","      else:\n","        xVal.append(out)\n","        yVal.append(to_categorical(i, class_num))\n","        \n","    fc += 1\n","\n","  # Выводим информацию о готовности обработки датасета\n","  print(g, \":\", round(time.time() - start_time), \"c\")\n","\n","'''\n","rock : 36 c\n","jazz : 37 c\n","hiphop : 35 c\n","pop : 35 c\n","blues : 40 c\n","country : 35 c\n","classical : 37 c\n","metal : 37 c\n","disco : 35 c\n","reggae : 35 c\n","\n","total = 362 c = 6 min\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o5H2Iv27XCCW","executionInfo":{"status":"ok","timestamp":1669642872930,"user_tz":-180,"elapsed":362021,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"a3ba29c9-b161-4c3f-a2ee-22a480fc9a89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["rock : 36 c\n","jazz : 37 c\n","hiphop : 35 c\n","pop : 35 c\n","blues : 40 c\n","country : 35 c\n","classical : 37 c\n","metal : 37 c\n","disco : 35 c\n","reggae : 35 c\n"]}]},{"cell_type":"code","source":["# Переводим данные в numpy массивы\n","xTrain = np.array(xTrain)\n","yTrain = np.array(yTrain)\n","\n","xVal = np.array(xVal)\n","yVal = np.array(yVal)"],"metadata":{"id":"w01k7TdJbiuz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Создаем копии наших выборок. Они нам понадобятся позже\n","xTrain_backup = xTrain.copy()\n","yTrain_backup = yTrain.copy()\n","\n","# Нормирование данных\n","\n","# Создаём экземпляр класса StandardScaler для нормирования данных\n","scaler = StandardScaler() # Нормирование = Нормализация = приведение данных к формату значений от 0 до 1.\n","# Т.е. в вещественные числа.\n","\n","# Номируем X_train\n","xTrain = scaler.fit_transform(xTrain)\n","xVal = scaler.fit_transform(xVal)\n","\n","# Проверяем, применилось ли нормирование\n","print(xTrain_backup[0])\n","print()\n","print(xTrain[0])"],"metadata":{"id":"VRwAWHf9fMUq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669643738793,"user_tz":-180,"elapsed":315,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"a28cbc55-a266-4cca-d292-692c8dff0360"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-0.15783397  0.92730366  1.40129931  1.2308699   0.79446916  0.73104829\n"," -0.54713433  0.55417048 -1.88071591  0.96678459 -0.38808644  1.11792954\n"," -0.68921889  0.95974608 -0.92792257  0.91401592 -0.96800868  0.16497362\n"," -0.56724171  1.69690779 -0.06623417  1.74839862  0.65527969 -0.34189336\n"," -0.64579659 -0.71288823 -1.25866306 -0.78561763 -0.37890433  1.31753826\n"," -0.12494669 -0.23053896  0.8694019   0.34709212  1.22939977 -0.31010084\n"," -0.26166047]\n","\n","[-0.15783397  0.92730366  1.40129931  1.2308699   0.79446916  0.73104829\n"," -0.54713433  0.55417048 -1.88071591  0.96678459 -0.38808644  1.11792954\n"," -0.68921889  0.95974608 -0.92792257  0.91401592 -0.96800868  0.16497362\n"," -0.56724171  1.69690779 -0.06623417  1.74839862  0.65527969 -0.34189336\n"," -0.64579659 -0.71288823 -1.25866306 -0.78561763 -0.37890433  1.31753826\n"," -0.12494669 -0.23053896  0.8694019   0.34709212  1.22939977 -0.31010084\n"," -0.26166047]\n"]}]},{"cell_type":"code","source":["# Разделяем выборку на обучающую и тестовую. На тестовую отдаем 10%\n","#xTrainS, xVal, yTrainS, yVal = train_test_split(xTrain, yTrain, test_size=0.1)\n","\n","xTrainS = xTrain\n","yTrainS = yTrain"],"metadata":{"id":"MLXJ1NwTfoOv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Выводим размерности обучающей и проверочной выборки\n","print(xTrainS.shape)\n","print(yTrainS.shape)\n","print(xVal.shape)\n","print(yVal.shape)"],"metadata":{"id":"0bhcgtRkgXYR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669643744877,"user_tz":-180,"elapsed":5,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"116ff7cc-01da-4393-c06b-27ff765286f2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(4500, 37)\n","(4500, 10)\n","(500, 37)\n","(500, 10)\n"]}]},{"cell_type":"markdown","source":["# Модели нейросетей"],"metadata":{"id":"EgVa9LaRVA2c"}},{"cell_type":"markdown","source":["## Простая нейросеть для классификации"],"metadata":{"id":"iYu092zqhCY5"}},{"cell_type":"code","source":["# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","model = Sequential()\n","model.add(Dense(256, activation='elu', input_shape=(param_num,)))\n","model.add(Dense(128, activation='elu'))\n","model.add(Dense(64, activation='elu'))\n","model.add(Dense(32, activation='elu'))\n","model.add(Dense(class_num, activation='softmax'))\n","\n","# Компилируем сеть\n","model.compile(optimizer=RMSprop(learning_rate=1e-5),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","\n","#Обучаем\n","history = model.fit(xTrainS, yTrainS,\n","                    epochs=200,\n","                    batch_size=20,\n","                    validation_data=(xVal, yVal))\n","\n","#Выводим график точности распознавания на обучающей и проверочной выборках\n","plt.plot(history.history[\"accuracy\"])\n","plt.plot(history.history[\"val_accuracy\"])\n","plt.show()"],"metadata":{"id":"NedkS59UgnLa","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1669643950578,"user_tz":-180,"elapsed":202910,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"4861e27d-6a08-4875-e0b7-568a046d7b58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Количество аудио-параметров: 37\n","Количество жанров: 10\n","Epoch 1/200\n","225/225 [==============================] - 1s 4ms/step - loss: 2.2829 - accuracy: 0.1587 - val_loss: 2.1435 - val_accuracy: 0.2680\n","Epoch 2/200\n","225/225 [==============================] - 1s 3ms/step - loss: 2.0249 - accuracy: 0.3089 - val_loss: 1.9324 - val_accuracy: 0.3280\n","Epoch 3/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.8673 - accuracy: 0.3593 - val_loss: 1.8029 - val_accuracy: 0.3600\n","Epoch 4/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.7670 - accuracy: 0.3758 - val_loss: 1.7156 - val_accuracy: 0.3780\n","Epoch 5/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.6963 - accuracy: 0.3924 - val_loss: 1.6511 - val_accuracy: 0.3980\n","Epoch 6/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.6419 - accuracy: 0.4098 - val_loss: 1.6013 - val_accuracy: 0.4260\n","Epoch 7/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.5979 - accuracy: 0.4249 - val_loss: 1.5601 - val_accuracy: 0.4360\n","Epoch 8/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.5610 - accuracy: 0.4409 - val_loss: 1.5272 - val_accuracy: 0.4440\n","Epoch 9/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.5292 - accuracy: 0.4513 - val_loss: 1.4983 - val_accuracy: 0.4600\n","Epoch 10/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.5013 - accuracy: 0.4653 - val_loss: 1.4736 - val_accuracy: 0.4800\n","Epoch 11/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.4760 - accuracy: 0.4800 - val_loss: 1.4519 - val_accuracy: 0.4900\n","Epoch 12/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.4530 - accuracy: 0.4913 - val_loss: 1.4321 - val_accuracy: 0.5040\n","Epoch 13/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.4319 - accuracy: 0.5002 - val_loss: 1.4132 - val_accuracy: 0.5200\n","Epoch 14/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.4124 - accuracy: 0.5120 - val_loss: 1.3970 - val_accuracy: 0.5280\n","Epoch 15/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3942 - accuracy: 0.5218 - val_loss: 1.3827 - val_accuracy: 0.5320\n","Epoch 16/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3773 - accuracy: 0.5278 - val_loss: 1.3671 - val_accuracy: 0.5480\n","Epoch 17/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3615 - accuracy: 0.5378 - val_loss: 1.3550 - val_accuracy: 0.5440\n","Epoch 18/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3465 - accuracy: 0.5438 - val_loss: 1.3427 - val_accuracy: 0.5480\n","Epoch 19/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3322 - accuracy: 0.5513 - val_loss: 1.3315 - val_accuracy: 0.5580\n","Epoch 20/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3187 - accuracy: 0.5558 - val_loss: 1.3209 - val_accuracy: 0.5580\n","Epoch 21/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.3059 - accuracy: 0.5633 - val_loss: 1.3114 - val_accuracy: 0.5600\n","Epoch 22/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2936 - accuracy: 0.5669 - val_loss: 1.3035 - val_accuracy: 0.5580\n","Epoch 23/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2819 - accuracy: 0.5709 - val_loss: 1.2938 - val_accuracy: 0.5620\n","Epoch 24/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2708 - accuracy: 0.5778 - val_loss: 1.2851 - val_accuracy: 0.5620\n","Epoch 25/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2601 - accuracy: 0.5804 - val_loss: 1.2762 - val_accuracy: 0.5660\n","Epoch 26/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2498 - accuracy: 0.5813 - val_loss: 1.2694 - val_accuracy: 0.5620\n","Epoch 27/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2400 - accuracy: 0.5878 - val_loss: 1.2627 - val_accuracy: 0.5640\n","Epoch 28/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2304 - accuracy: 0.5902 - val_loss: 1.2553 - val_accuracy: 0.5700\n","Epoch 29/200\n","225/225 [==============================] - 1s 4ms/step - loss: 1.2211 - accuracy: 0.5964 - val_loss: 1.2501 - val_accuracy: 0.5680\n","Epoch 30/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2122 - accuracy: 0.5971 - val_loss: 1.2418 - val_accuracy: 0.5700\n","Epoch 31/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.2037 - accuracy: 0.6018 - val_loss: 1.2371 - val_accuracy: 0.5740\n","Epoch 32/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1953 - accuracy: 0.6062 - val_loss: 1.2323 - val_accuracy: 0.5760\n","Epoch 33/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1872 - accuracy: 0.6078 - val_loss: 1.2272 - val_accuracy: 0.5780\n","Epoch 34/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1794 - accuracy: 0.6093 - val_loss: 1.2205 - val_accuracy: 0.5800\n","Epoch 35/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1717 - accuracy: 0.6116 - val_loss: 1.2173 - val_accuracy: 0.5800\n","Epoch 36/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1645 - accuracy: 0.6142 - val_loss: 1.2124 - val_accuracy: 0.5820\n","Epoch 37/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1573 - accuracy: 0.6180 - val_loss: 1.2079 - val_accuracy: 0.5780\n","Epoch 38/200\n","225/225 [==============================] - 1s 4ms/step - loss: 1.1503 - accuracy: 0.6207 - val_loss: 1.2027 - val_accuracy: 0.5860\n","Epoch 39/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1435 - accuracy: 0.6222 - val_loss: 1.1988 - val_accuracy: 0.5840\n","Epoch 40/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1369 - accuracy: 0.6244 - val_loss: 1.1939 - val_accuracy: 0.5880\n","Epoch 41/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1304 - accuracy: 0.6273 - val_loss: 1.1921 - val_accuracy: 0.6000\n","Epoch 42/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1240 - accuracy: 0.6307 - val_loss: 1.1876 - val_accuracy: 0.6000\n","Epoch 43/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1180 - accuracy: 0.6291 - val_loss: 1.1829 - val_accuracy: 0.5960\n","Epoch 44/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1122 - accuracy: 0.6316 - val_loss: 1.1799 - val_accuracy: 0.6040\n","Epoch 45/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1062 - accuracy: 0.6349 - val_loss: 1.1764 - val_accuracy: 0.6080\n","Epoch 46/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.1005 - accuracy: 0.6389 - val_loss: 1.1746 - val_accuracy: 0.6080\n","Epoch 47/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0951 - accuracy: 0.6398 - val_loss: 1.1710 - val_accuracy: 0.6060\n","Epoch 48/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0895 - accuracy: 0.6409 - val_loss: 1.1674 - val_accuracy: 0.6060\n","Epoch 49/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0842 - accuracy: 0.6413 - val_loss: 1.1649 - val_accuracy: 0.6120\n","Epoch 50/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0789 - accuracy: 0.6429 - val_loss: 1.1629 - val_accuracy: 0.6100\n","Epoch 51/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0739 - accuracy: 0.6464 - val_loss: 1.1595 - val_accuracy: 0.6120\n","Epoch 52/200\n","225/225 [==============================] - 1s 4ms/step - loss: 1.0688 - accuracy: 0.6487 - val_loss: 1.1572 - val_accuracy: 0.6160\n","Epoch 53/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0641 - accuracy: 0.6496 - val_loss: 1.1542 - val_accuracy: 0.6160\n","Epoch 54/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0592 - accuracy: 0.6516 - val_loss: 1.1503 - val_accuracy: 0.6100\n","Epoch 55/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0546 - accuracy: 0.6551 - val_loss: 1.1482 - val_accuracy: 0.6120\n","Epoch 56/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0499 - accuracy: 0.6564 - val_loss: 1.1473 - val_accuracy: 0.6140\n","Epoch 57/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0454 - accuracy: 0.6542 - val_loss: 1.1439 - val_accuracy: 0.6120\n","Epoch 58/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0409 - accuracy: 0.6556 - val_loss: 1.1396 - val_accuracy: 0.6100\n","Epoch 59/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0367 - accuracy: 0.6607 - val_loss: 1.1389 - val_accuracy: 0.6060\n","Epoch 60/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0322 - accuracy: 0.6640 - val_loss: 1.1385 - val_accuracy: 0.6080\n","Epoch 61/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0282 - accuracy: 0.6618 - val_loss: 1.1350 - val_accuracy: 0.6040\n","Epoch 62/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0239 - accuracy: 0.6638 - val_loss: 1.1329 - val_accuracy: 0.6040\n","Epoch 63/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0200 - accuracy: 0.6673 - val_loss: 1.1316 - val_accuracy: 0.5960\n","Epoch 64/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0159 - accuracy: 0.6669 - val_loss: 1.1291 - val_accuracy: 0.5980\n","Epoch 65/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0120 - accuracy: 0.6678 - val_loss: 1.1256 - val_accuracy: 0.5980\n","Epoch 66/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0081 - accuracy: 0.6722 - val_loss: 1.1249 - val_accuracy: 0.5980\n","Epoch 67/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0043 - accuracy: 0.6733 - val_loss: 1.1235 - val_accuracy: 0.6020\n","Epoch 68/200\n","225/225 [==============================] - 1s 3ms/step - loss: 1.0006 - accuracy: 0.6751 - val_loss: 1.1209 - val_accuracy: 0.6040\n","Epoch 69/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9968 - accuracy: 0.6738 - val_loss: 1.1199 - val_accuracy: 0.6040\n","Epoch 70/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9932 - accuracy: 0.6753 - val_loss: 1.1175 - val_accuracy: 0.6020\n","Epoch 71/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9896 - accuracy: 0.6771 - val_loss: 1.1170 - val_accuracy: 0.6040\n","Epoch 72/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9861 - accuracy: 0.6793 - val_loss: 1.1152 - val_accuracy: 0.6080\n","Epoch 73/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9825 - accuracy: 0.6780 - val_loss: 1.1139 - val_accuracy: 0.6080\n","Epoch 74/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9791 - accuracy: 0.6807 - val_loss: 1.1145 - val_accuracy: 0.6120\n","Epoch 75/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9758 - accuracy: 0.6787 - val_loss: 1.1120 - val_accuracy: 0.6100\n","Epoch 76/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9724 - accuracy: 0.6833 - val_loss: 1.1113 - val_accuracy: 0.6120\n","Epoch 77/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9691 - accuracy: 0.6840 - val_loss: 1.1084 - val_accuracy: 0.6120\n","Epoch 78/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9658 - accuracy: 0.6842 - val_loss: 1.1087 - val_accuracy: 0.6120\n","Epoch 79/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9626 - accuracy: 0.6829 - val_loss: 1.1063 - val_accuracy: 0.6080\n","Epoch 80/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9593 - accuracy: 0.6856 - val_loss: 1.1036 - val_accuracy: 0.6100\n","Epoch 81/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9564 - accuracy: 0.6873 - val_loss: 1.1033 - val_accuracy: 0.6100\n","Epoch 82/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9530 - accuracy: 0.6913 - val_loss: 1.1044 - val_accuracy: 0.6100\n","Epoch 83/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9500 - accuracy: 0.6880 - val_loss: 1.1027 - val_accuracy: 0.6100\n","Epoch 84/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9471 - accuracy: 0.6911 - val_loss: 1.1012 - val_accuracy: 0.6100\n","Epoch 85/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.9440 - accuracy: 0.6902 - val_loss: 1.0977 - val_accuracy: 0.6140\n","Epoch 86/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9410 - accuracy: 0.6938 - val_loss: 1.0982 - val_accuracy: 0.6120\n","Epoch 87/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9380 - accuracy: 0.6942 - val_loss: 1.0978 - val_accuracy: 0.6160\n","Epoch 88/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9352 - accuracy: 0.6956 - val_loss: 1.0959 - val_accuracy: 0.6160\n","Epoch 89/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9322 - accuracy: 0.6958 - val_loss: 1.0930 - val_accuracy: 0.6180\n","Epoch 90/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9294 - accuracy: 0.6973 - val_loss: 1.0932 - val_accuracy: 0.6200\n","Epoch 91/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9266 - accuracy: 0.6998 - val_loss: 1.0940 - val_accuracy: 0.6180\n","Epoch 92/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9239 - accuracy: 0.6962 - val_loss: 1.0923 - val_accuracy: 0.6200\n","Epoch 93/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9210 - accuracy: 0.6987 - val_loss: 1.0916 - val_accuracy: 0.6220\n","Epoch 94/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9185 - accuracy: 0.6989 - val_loss: 1.0900 - val_accuracy: 0.6240\n","Epoch 95/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9155 - accuracy: 0.6991 - val_loss: 1.0888 - val_accuracy: 0.6240\n","Epoch 96/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9129 - accuracy: 0.6996 - val_loss: 1.0893 - val_accuracy: 0.6240\n","Epoch 97/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9104 - accuracy: 0.7013 - val_loss: 1.0881 - val_accuracy: 0.6260\n","Epoch 98/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9077 - accuracy: 0.7027 - val_loss: 1.0859 - val_accuracy: 0.6260\n","Epoch 99/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9051 - accuracy: 0.7029 - val_loss: 1.0860 - val_accuracy: 0.6280\n","Epoch 100/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.9025 - accuracy: 0.7056 - val_loss: 1.0848 - val_accuracy: 0.6280\n","Epoch 101/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8999 - accuracy: 0.7040 - val_loss: 1.0863 - val_accuracy: 0.6240\n","Epoch 102/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8974 - accuracy: 0.7049 - val_loss: 1.0847 - val_accuracy: 0.6260\n","Epoch 103/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8948 - accuracy: 0.7071 - val_loss: 1.0824 - val_accuracy: 0.6260\n","Epoch 104/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8924 - accuracy: 0.7058 - val_loss: 1.0809 - val_accuracy: 0.6280\n","Epoch 105/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8898 - accuracy: 0.7062 - val_loss: 1.0791 - val_accuracy: 0.6320\n","Epoch 106/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8875 - accuracy: 0.7080 - val_loss: 1.0796 - val_accuracy: 0.6280\n","Epoch 107/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8850 - accuracy: 0.7076 - val_loss: 1.0799 - val_accuracy: 0.6280\n","Epoch 108/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8826 - accuracy: 0.7082 - val_loss: 1.0794 - val_accuracy: 0.6280\n","Epoch 109/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8801 - accuracy: 0.7087 - val_loss: 1.0807 - val_accuracy: 0.6220\n","Epoch 110/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8777 - accuracy: 0.7093 - val_loss: 1.0796 - val_accuracy: 0.6240\n","Epoch 111/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8753 - accuracy: 0.7113 - val_loss: 1.0780 - val_accuracy: 0.6280\n","Epoch 112/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8730 - accuracy: 0.7107 - val_loss: 1.0773 - val_accuracy: 0.6280\n","Epoch 113/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8707 - accuracy: 0.7120 - val_loss: 1.0769 - val_accuracy: 0.6320\n","Epoch 114/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8684 - accuracy: 0.7111 - val_loss: 1.0757 - val_accuracy: 0.6300\n","Epoch 115/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8660 - accuracy: 0.7133 - val_loss: 1.0754 - val_accuracy: 0.6320\n","Epoch 116/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8637 - accuracy: 0.7124 - val_loss: 1.0745 - val_accuracy: 0.6280\n","Epoch 117/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8614 - accuracy: 0.7133 - val_loss: 1.0755 - val_accuracy: 0.6280\n","Epoch 118/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8593 - accuracy: 0.7142 - val_loss: 1.0758 - val_accuracy: 0.6300\n","Epoch 119/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8570 - accuracy: 0.7140 - val_loss: 1.0738 - val_accuracy: 0.6300\n","Epoch 120/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8548 - accuracy: 0.7151 - val_loss: 1.0731 - val_accuracy: 0.6300\n","Epoch 121/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8524 - accuracy: 0.7156 - val_loss: 1.0744 - val_accuracy: 0.6320\n","Epoch 122/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8503 - accuracy: 0.7162 - val_loss: 1.0738 - val_accuracy: 0.6360\n","Epoch 123/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8481 - accuracy: 0.7180 - val_loss: 1.0719 - val_accuracy: 0.6320\n","Epoch 124/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8459 - accuracy: 0.7189 - val_loss: 1.0715 - val_accuracy: 0.6340\n","Epoch 125/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8437 - accuracy: 0.7189 - val_loss: 1.0687 - val_accuracy: 0.6360\n","Epoch 126/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8415 - accuracy: 0.7193 - val_loss: 1.0703 - val_accuracy: 0.6340\n","Epoch 127/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8394 - accuracy: 0.7204 - val_loss: 1.0714 - val_accuracy: 0.6320\n","Epoch 128/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8372 - accuracy: 0.7204 - val_loss: 1.0711 - val_accuracy: 0.6340\n","Epoch 129/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8351 - accuracy: 0.7236 - val_loss: 1.0714 - val_accuracy: 0.6320\n","Epoch 130/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8330 - accuracy: 0.7229 - val_loss: 1.0695 - val_accuracy: 0.6340\n","Epoch 131/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8309 - accuracy: 0.7242 - val_loss: 1.0690 - val_accuracy: 0.6400\n","Epoch 132/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8288 - accuracy: 0.7249 - val_loss: 1.0697 - val_accuracy: 0.6400\n","Epoch 133/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8268 - accuracy: 0.7251 - val_loss: 1.0691 - val_accuracy: 0.6380\n","Epoch 134/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8246 - accuracy: 0.7273 - val_loss: 1.0691 - val_accuracy: 0.6400\n","Epoch 135/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8226 - accuracy: 0.7269 - val_loss: 1.0671 - val_accuracy: 0.6380\n","Epoch 136/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8206 - accuracy: 0.7271 - val_loss: 1.0674 - val_accuracy: 0.6420\n","Epoch 137/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8186 - accuracy: 0.7302 - val_loss: 1.0672 - val_accuracy: 0.6420\n","Epoch 138/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8165 - accuracy: 0.7293 - val_loss: 1.0682 - val_accuracy: 0.6400\n","Epoch 139/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8144 - accuracy: 0.7300 - val_loss: 1.0688 - val_accuracy: 0.6420\n","Epoch 140/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8125 - accuracy: 0.7316 - val_loss: 1.0650 - val_accuracy: 0.6380\n","Epoch 141/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8105 - accuracy: 0.7316 - val_loss: 1.0644 - val_accuracy: 0.6400\n","Epoch 142/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.8086 - accuracy: 0.7309 - val_loss: 1.0648 - val_accuracy: 0.6380\n","Epoch 143/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8067 - accuracy: 0.7338 - val_loss: 1.0640 - val_accuracy: 0.6380\n","Epoch 144/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8047 - accuracy: 0.7358 - val_loss: 1.0647 - val_accuracy: 0.6380\n","Epoch 145/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8026 - accuracy: 0.7340 - val_loss: 1.0618 - val_accuracy: 0.6420\n","Epoch 146/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.8006 - accuracy: 0.7344 - val_loss: 1.0642 - val_accuracy: 0.6480\n","Epoch 147/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7989 - accuracy: 0.7380 - val_loss: 1.0642 - val_accuracy: 0.6460\n","Epoch 148/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7968 - accuracy: 0.7384 - val_loss: 1.0646 - val_accuracy: 0.6440\n","Epoch 149/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7949 - accuracy: 0.7364 - val_loss: 1.0652 - val_accuracy: 0.6420\n","Epoch 150/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7931 - accuracy: 0.7389 - val_loss: 1.0631 - val_accuracy: 0.6440\n","Epoch 151/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7912 - accuracy: 0.7391 - val_loss: 1.0635 - val_accuracy: 0.6420\n","Epoch 152/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7891 - accuracy: 0.7391 - val_loss: 1.0624 - val_accuracy: 0.6380\n","Epoch 153/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7873 - accuracy: 0.7407 - val_loss: 1.0628 - val_accuracy: 0.6400\n","Epoch 154/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7854 - accuracy: 0.7411 - val_loss: 1.0637 - val_accuracy: 0.6400\n","Epoch 155/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7836 - accuracy: 0.7416 - val_loss: 1.0639 - val_accuracy: 0.6360\n","Epoch 156/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7817 - accuracy: 0.7420 - val_loss: 1.0618 - val_accuracy: 0.6380\n","Epoch 157/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7797 - accuracy: 0.7424 - val_loss: 1.0601 - val_accuracy: 0.6360\n","Epoch 158/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7779 - accuracy: 0.7440 - val_loss: 1.0611 - val_accuracy: 0.6420\n","Epoch 159/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7761 - accuracy: 0.7444 - val_loss: 1.0619 - val_accuracy: 0.6420\n","Epoch 160/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7743 - accuracy: 0.7456 - val_loss: 1.0627 - val_accuracy: 0.6500\n","Epoch 161/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7725 - accuracy: 0.7456 - val_loss: 1.0607 - val_accuracy: 0.6420\n","Epoch 162/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7707 - accuracy: 0.7456 - val_loss: 1.0603 - val_accuracy: 0.6400\n","Epoch 163/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7688 - accuracy: 0.7460 - val_loss: 1.0606 - val_accuracy: 0.6400\n","Epoch 164/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7670 - accuracy: 0.7456 - val_loss: 1.0605 - val_accuracy: 0.6380\n","Epoch 165/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7652 - accuracy: 0.7489 - val_loss: 1.0626 - val_accuracy: 0.6360\n","Epoch 166/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7634 - accuracy: 0.7496 - val_loss: 1.0605 - val_accuracy: 0.6380\n","Epoch 167/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7615 - accuracy: 0.7491 - val_loss: 1.0611 - val_accuracy: 0.6400\n","Epoch 168/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7599 - accuracy: 0.7527 - val_loss: 1.0601 - val_accuracy: 0.6380\n","Epoch 169/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7581 - accuracy: 0.7487 - val_loss: 1.0614 - val_accuracy: 0.6400\n","Epoch 170/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7562 - accuracy: 0.7493 - val_loss: 1.0625 - val_accuracy: 0.6380\n","Epoch 171/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7546 - accuracy: 0.7533 - val_loss: 1.0610 - val_accuracy: 0.6380\n","Epoch 172/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7529 - accuracy: 0.7524 - val_loss: 1.0616 - val_accuracy: 0.6380\n","Epoch 173/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7511 - accuracy: 0.7522 - val_loss: 1.0598 - val_accuracy: 0.6400\n","Epoch 174/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7493 - accuracy: 0.7522 - val_loss: 1.0616 - val_accuracy: 0.6400\n","Epoch 175/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7475 - accuracy: 0.7556 - val_loss: 1.0599 - val_accuracy: 0.6400\n","Epoch 176/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7457 - accuracy: 0.7533 - val_loss: 1.0588 - val_accuracy: 0.6400\n","Epoch 177/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7441 - accuracy: 0.7544 - val_loss: 1.0590 - val_accuracy: 0.6440\n","Epoch 178/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7422 - accuracy: 0.7560 - val_loss: 1.0623 - val_accuracy: 0.6400\n","Epoch 179/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7406 - accuracy: 0.7553 - val_loss: 1.0600 - val_accuracy: 0.6400\n","Epoch 180/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7389 - accuracy: 0.7553 - val_loss: 1.0571 - val_accuracy: 0.6420\n","Epoch 181/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7372 - accuracy: 0.7582 - val_loss: 1.0585 - val_accuracy: 0.6440\n","Epoch 182/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7354 - accuracy: 0.7567 - val_loss: 1.0609 - val_accuracy: 0.6420\n","Epoch 183/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7338 - accuracy: 0.7576 - val_loss: 1.0604 - val_accuracy: 0.6400\n","Epoch 184/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7321 - accuracy: 0.7578 - val_loss: 1.0597 - val_accuracy: 0.6440\n","Epoch 185/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7304 - accuracy: 0.7598 - val_loss: 1.0606 - val_accuracy: 0.6440\n","Epoch 186/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7286 - accuracy: 0.7596 - val_loss: 1.0599 - val_accuracy: 0.6420\n","Epoch 187/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7268 - accuracy: 0.7607 - val_loss: 1.0623 - val_accuracy: 0.6420\n","Epoch 188/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7253 - accuracy: 0.7604 - val_loss: 1.0585 - val_accuracy: 0.6440\n","Epoch 189/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7237 - accuracy: 0.7620 - val_loss: 1.0591 - val_accuracy: 0.6460\n","Epoch 190/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7220 - accuracy: 0.7624 - val_loss: 1.0584 - val_accuracy: 0.6480\n","Epoch 191/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7203 - accuracy: 0.7638 - val_loss: 1.0606 - val_accuracy: 0.6460\n","Epoch 192/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7187 - accuracy: 0.7649 - val_loss: 1.0605 - val_accuracy: 0.6440\n","Epoch 193/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7170 - accuracy: 0.7644 - val_loss: 1.0580 - val_accuracy: 0.6460\n","Epoch 194/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7154 - accuracy: 0.7653 - val_loss: 1.0608 - val_accuracy: 0.6420\n","Epoch 195/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7136 - accuracy: 0.7680 - val_loss: 1.0619 - val_accuracy: 0.6420\n","Epoch 196/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7122 - accuracy: 0.7667 - val_loss: 1.0619 - val_accuracy: 0.6420\n","Epoch 197/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7106 - accuracy: 0.7678 - val_loss: 1.0590 - val_accuracy: 0.6460\n","Epoch 198/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7089 - accuracy: 0.7698 - val_loss: 1.0596 - val_accuracy: 0.6460\n","Epoch 199/200\n","225/225 [==============================] - 1s 4ms/step - loss: 0.7074 - accuracy: 0.7689 - val_loss: 1.0579 - val_accuracy: 0.6500\n","Epoch 200/200\n","225/225 [==============================] - 1s 3ms/step - loss: 0.7055 - accuracy: 0.7691 - val_loss: 1.0589 - val_accuracy: 0.6440\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Усложним наши данные - обогатим их дополнительными значениями"],"metadata":{"id":"uitusJ_Kh1_6"}},{"cell_type":"code","source":["# квадрат значений\n","xTrain_sqr = np.array([[t**2 for t in x] for x in xTrainS])\n","xVal_sqr = np.array([[t**2 for t in x] for x in xVal])\n","\n","# Квадратный корнь из абсолютных значений\n","xTrain_sqrt = np.array([[abs(t)**0.5 for t in x] for x in xTrainS])\n","xVal_sqrt = np.array([[abs(t)**0.5 for t in x] for x in xVal])\n","\n","# 1/t\n","xTrain_inv = np.array([[t**(-1) for t in x] for x in xTrainS])\n","xVal_inv = np.array([[t**(-1) for t in x] for x in xVal])\n","\n","# 2 в степени t\n","xTrain_exp = np.array([[2**t for t in x] for x in xTrainS])\n","xVal_exp = np.array([[2**t for t in x] for x in xVal])\n","\n","\n","#объединяем все массивы(Функция hstack() соединяет массивы по горизонтали)\n","xTrain2 = np.hstack([xTrainS, xTrain_sqr, xTrain_sqrt, xTrain_inv, xTrain_exp])\n","xVal2 = np.hstack([xVal, xVal_sqr, xVal_sqrt, xVal_inv, xVal_exp])\n","\n","print(\"Обучающая выборка:  \", xTrain2.shape)\n","print(\"Проверочная выборка:\", xVal2.shape)"],"metadata":{"id":"eM16q4p-lPhK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669626249650,"user_tz":-180,"elapsed":26,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"334c2b53-0349-4c27-e75d-39009cd4d145"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Обучающая выборка:   (900, 185)\n","Проверочная выборка: (100, 185)\n"]}]},{"cell_type":"code","source":["# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain2.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","model2 = Sequential()\n","model2.add(Dense(256, activation='elu', input_shape=(param_num,)))\n","model2.add(Dense(128, activation='elu'))\n","model2.add(Dense(64, activation='elu'))\n","model2.add(Dense(32, activation='elu'))\n","model2.add(Dense(class_num, activation='softmax'))\n","\n","# Компилируем сеть\n","model2.compile(optimizer=RMSprop(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","\n","#Обучаем\n","history2 = model2.fit(xTrain2, yTrainS,\n","                    epochs=200,\n","                    batch_size=20,\n","                    validation_data=(xVal2, yVal))\n","\n","#Выводим график точности распознавания на обучающей и проверочной выборках\n","plt.plot(history2.history[\"accuracy\"])\n","plt.plot(history2.history[\"val_accuracy\"])\n","plt.show()"],"metadata":{"id":"gVhOBtKhmWNu","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1669626289252,"user_tz":-180,"elapsed":39621,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"c36d0d02-ac09-42b0-d52e-f9baa13938cd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Количество аудио-параметров: 185\n","Количество жанров: 10\n","Epoch 1/200\n","45/45 [==============================] - 1s 7ms/step - loss: 8.6799 - accuracy: 0.1178 - val_loss: 6.5071 - val_accuracy: 0.1600\n","Epoch 2/200\n","45/45 [==============================] - 0s 3ms/step - loss: 5.4889 - accuracy: 0.1422 - val_loss: 6.0554 - val_accuracy: 0.1800\n","Epoch 3/200\n","45/45 [==============================] - 0s 4ms/step - loss: 3.9267 - accuracy: 0.1889 - val_loss: 5.5387 - val_accuracy: 0.2100\n","Epoch 4/200\n","45/45 [==============================] - 0s 4ms/step - loss: 3.2034 - accuracy: 0.2111 - val_loss: 4.4568 - val_accuracy: 0.2100\n","Epoch 5/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.8427 - accuracy: 0.2567 - val_loss: 4.3640 - val_accuracy: 0.2400\n","Epoch 6/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.5333 - accuracy: 0.2911 - val_loss: 4.4465 - val_accuracy: 0.2800\n","Epoch 7/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.2308 - accuracy: 0.3422 - val_loss: 4.1545 - val_accuracy: 0.2900\n","Epoch 8/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.2047 - accuracy: 0.3822 - val_loss: 4.1200 - val_accuracy: 0.3000\n","Epoch 9/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.9357 - accuracy: 0.4167 - val_loss: 4.4193 - val_accuracy: 0.2900\n","Epoch 10/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.0794 - accuracy: 0.4478 - val_loss: 4.3394 - val_accuracy: 0.3100\n","Epoch 11/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7077 - accuracy: 0.4700 - val_loss: 4.4406 - val_accuracy: 0.3100\n","Epoch 12/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6484 - accuracy: 0.5022 - val_loss: 4.7670 - val_accuracy: 0.3100\n","Epoch 13/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.5401 - accuracy: 0.5333 - val_loss: 4.5159 - val_accuracy: 0.3100\n","Epoch 14/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4986 - accuracy: 0.5556 - val_loss: 4.7181 - val_accuracy: 0.3200\n","Epoch 15/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4609 - accuracy: 0.5856 - val_loss: 4.9840 - val_accuracy: 0.3200\n","Epoch 16/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.3279 - accuracy: 0.6189 - val_loss: 4.9478 - val_accuracy: 0.3300\n","Epoch 17/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2568 - accuracy: 0.6389 - val_loss: 5.4035 - val_accuracy: 0.3100\n","Epoch 18/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2567 - accuracy: 0.6667 - val_loss: 5.2228 - val_accuracy: 0.3200\n","Epoch 19/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.1112 - accuracy: 0.6900 - val_loss: 5.4781 - val_accuracy: 0.3200\n","Epoch 20/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.1287 - accuracy: 0.7167 - val_loss: 5.8054 - val_accuracy: 0.3300\n","Epoch 21/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.1035 - accuracy: 0.7311 - val_loss: 5.8460 - val_accuracy: 0.3100\n","Epoch 22/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.9977 - accuracy: 0.7667 - val_loss: 5.9679 - val_accuracy: 0.3400\n","Epoch 23/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.9258 - accuracy: 0.7656 - val_loss: 6.2443 - val_accuracy: 0.3300\n","Epoch 24/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.9399 - accuracy: 0.7811 - val_loss: 6.1672 - val_accuracy: 0.3600\n","Epoch 25/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.8875 - accuracy: 0.8067 - val_loss: 6.7685 - val_accuracy: 0.3700\n","Epoch 26/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.8355 - accuracy: 0.8211 - val_loss: 6.6752 - val_accuracy: 0.3700\n","Epoch 27/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.7517 - accuracy: 0.8267 - val_loss: 6.3529 - val_accuracy: 0.3200\n","Epoch 28/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.7093 - accuracy: 0.8422 - val_loss: 6.8677 - val_accuracy: 0.3600\n","Epoch 29/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.7151 - accuracy: 0.8433 - val_loss: 7.0585 - val_accuracy: 0.3600\n","Epoch 30/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.6559 - accuracy: 0.8656 - val_loss: 6.8864 - val_accuracy: 0.3600\n","Epoch 31/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.6520 - accuracy: 0.8678 - val_loss: 6.9457 - val_accuracy: 0.3500\n","Epoch 32/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.6058 - accuracy: 0.8789 - val_loss: 7.3750 - val_accuracy: 0.3600\n","Epoch 33/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.5945 - accuracy: 0.8978 - val_loss: 7.0596 - val_accuracy: 0.3700\n","Epoch 34/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.6080 - accuracy: 0.9033 - val_loss: 7.3928 - val_accuracy: 0.3700\n","Epoch 35/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.6219 - accuracy: 0.9156 - val_loss: 7.4104 - val_accuracy: 0.3900\n","Epoch 36/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.5039 - accuracy: 0.9122 - val_loss: 7.5989 - val_accuracy: 0.3900\n","Epoch 37/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.4675 - accuracy: 0.9333 - val_loss: 8.0232 - val_accuracy: 0.3600\n","Epoch 38/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3946 - accuracy: 0.9333 - val_loss: 7.5276 - val_accuracy: 0.3700\n","Epoch 39/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.5216 - accuracy: 0.9344 - val_loss: 8.1720 - val_accuracy: 0.3700\n","Epoch 40/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3555 - accuracy: 0.9433 - val_loss: 7.8285 - val_accuracy: 0.3800\n","Epoch 41/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3859 - accuracy: 0.9489 - val_loss: 8.1348 - val_accuracy: 0.3800\n","Epoch 42/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.4641 - accuracy: 0.9522 - val_loss: 8.1025 - val_accuracy: 0.3800\n","Epoch 43/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3303 - accuracy: 0.9600 - val_loss: 8.3804 - val_accuracy: 0.3700\n","Epoch 44/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3241 - accuracy: 0.9622 - val_loss: 8.2578 - val_accuracy: 0.3800\n","Epoch 45/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.3019 - accuracy: 0.9667 - val_loss: 8.4783 - val_accuracy: 0.3900\n","Epoch 46/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2795 - accuracy: 0.9722 - val_loss: 8.5286 - val_accuracy: 0.3700\n","Epoch 47/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2208 - accuracy: 0.9744 - val_loss: 8.3391 - val_accuracy: 0.4000\n","Epoch 48/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2784 - accuracy: 0.9811 - val_loss: 8.3844 - val_accuracy: 0.3800\n","Epoch 49/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2472 - accuracy: 0.9867 - val_loss: 8.8043 - val_accuracy: 0.4000\n","Epoch 50/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2067 - accuracy: 0.9789 - val_loss: 8.9105 - val_accuracy: 0.3900\n","Epoch 51/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.2199 - accuracy: 0.9867 - val_loss: 8.9000 - val_accuracy: 0.4000\n","Epoch 52/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1708 - accuracy: 0.9900 - val_loss: 8.8807 - val_accuracy: 0.4000\n","Epoch 53/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1437 - accuracy: 0.9911 - val_loss: 9.1725 - val_accuracy: 0.4000\n","Epoch 54/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1686 - accuracy: 0.9889 - val_loss: 9.7172 - val_accuracy: 0.3800\n","Epoch 55/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2605 - accuracy: 0.9889 - val_loss: 9.6447 - val_accuracy: 0.3800\n","Epoch 56/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1743 - accuracy: 0.9900 - val_loss: 10.0483 - val_accuracy: 0.3800\n","Epoch 57/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1544 - accuracy: 0.9933 - val_loss: 9.9086 - val_accuracy: 0.3700\n","Epoch 58/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1114 - accuracy: 0.9933 - val_loss: 9.5138 - val_accuracy: 0.4000\n","Epoch 59/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2147 - accuracy: 0.9933 - val_loss: 10.3065 - val_accuracy: 0.3900\n","Epoch 60/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1383 - accuracy: 0.9911 - val_loss: 10.3297 - val_accuracy: 0.3900\n","Epoch 61/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1159 - accuracy: 0.9911 - val_loss: 9.9366 - val_accuracy: 0.4100\n","Epoch 62/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0896 - accuracy: 0.9944 - val_loss: 10.5102 - val_accuracy: 0.3800\n","Epoch 63/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0915 - accuracy: 0.9944 - val_loss: 10.6361 - val_accuracy: 0.3900\n","Epoch 64/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2191 - accuracy: 0.9911 - val_loss: 10.6448 - val_accuracy: 0.3900\n","Epoch 65/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1078 - accuracy: 0.9867 - val_loss: 10.9605 - val_accuracy: 0.3900\n","Epoch 66/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0919 - accuracy: 0.9944 - val_loss: 11.4535 - val_accuracy: 0.4000\n","Epoch 67/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1148 - accuracy: 0.9944 - val_loss: 10.9163 - val_accuracy: 0.4000\n","Epoch 68/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0488 - accuracy: 0.9911 - val_loss: 11.1443 - val_accuracy: 0.4100\n","Epoch 69/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0775 - accuracy: 0.9967 - val_loss: 11.2648 - val_accuracy: 0.4000\n","Epoch 70/200\n","45/45 [==============================] - 0s 6ms/step - loss: 0.1101 - accuracy: 0.9944 - val_loss: 11.5020 - val_accuracy: 0.3900\n","Epoch 71/200\n","45/45 [==============================] - 0s 7ms/step - loss: 0.0592 - accuracy: 0.9922 - val_loss: 11.2356 - val_accuracy: 0.4000\n","Epoch 72/200\n","45/45 [==============================] - 0s 7ms/step - loss: 0.1175 - accuracy: 0.9900 - val_loss: 11.4528 - val_accuracy: 0.4100\n","Epoch 73/200\n","45/45 [==============================] - 0s 8ms/step - loss: 0.0278 - accuracy: 0.9967 - val_loss: 11.6004 - val_accuracy: 0.4000\n","Epoch 74/200\n","45/45 [==============================] - 0s 8ms/step - loss: 0.1173 - accuracy: 0.9933 - val_loss: 11.5870 - val_accuracy: 0.4000\n","Epoch 75/200\n","45/45 [==============================] - 0s 7ms/step - loss: 0.0353 - accuracy: 0.9933 - val_loss: 11.6819 - val_accuracy: 0.3800\n","Epoch 76/200\n","45/45 [==============================] - 0s 10ms/step - loss: 0.0528 - accuracy: 0.9967 - val_loss: 11.9824 - val_accuracy: 0.3800\n","Epoch 77/200\n","45/45 [==============================] - 0s 9ms/step - loss: 0.0367 - accuracy: 0.9922 - val_loss: 11.8558 - val_accuracy: 0.3900\n","Epoch 78/200\n","45/45 [==============================] - 0s 9ms/step - loss: 0.1300 - accuracy: 0.9933 - val_loss: 12.6740 - val_accuracy: 0.4100\n","Epoch 79/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0692 - accuracy: 0.9944 - val_loss: 12.1185 - val_accuracy: 0.3900\n","Epoch 80/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0480 - accuracy: 0.9933 - val_loss: 12.1702 - val_accuracy: 0.3700\n","Epoch 81/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0180 - accuracy: 0.9956 - val_loss: 12.8926 - val_accuracy: 0.4000\n","Epoch 82/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0790 - accuracy: 0.9922 - val_loss: 12.8219 - val_accuracy: 0.3900\n","Epoch 83/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0197 - accuracy: 0.9956 - val_loss: 13.0152 - val_accuracy: 0.4200\n","Epoch 84/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1751 - accuracy: 0.9956 - val_loss: 13.0426 - val_accuracy: 0.4100\n","Epoch 85/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0124 - accuracy: 0.9978 - val_loss: 13.0996 - val_accuracy: 0.3800\n","Epoch 86/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0141 - accuracy: 0.9978 - val_loss: 13.3262 - val_accuracy: 0.3900\n","Epoch 87/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1675 - accuracy: 0.9922 - val_loss: 13.3007 - val_accuracy: 0.3900\n","Epoch 88/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0148 - accuracy: 0.9956 - val_loss: 13.3716 - val_accuracy: 0.4100\n","Epoch 89/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0117 - accuracy: 0.9967 - val_loss: 13.0579 - val_accuracy: 0.3900\n","Epoch 90/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0243 - accuracy: 0.9944 - val_loss: 13.5733 - val_accuracy: 0.4100\n","Epoch 91/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0177 - accuracy: 0.9956 - val_loss: 13.4512 - val_accuracy: 0.3900\n","Epoch 92/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0699 - accuracy: 0.9944 - val_loss: 13.5856 - val_accuracy: 0.4000\n","Epoch 93/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0454 - accuracy: 0.9956 - val_loss: 14.2722 - val_accuracy: 0.4200\n","Epoch 94/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0264 - accuracy: 0.9967 - val_loss: 13.7449 - val_accuracy: 0.4100\n","Epoch 95/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0144 - accuracy: 0.9956 - val_loss: 13.7546 - val_accuracy: 0.4100\n","Epoch 96/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0080 - accuracy: 0.9978 - val_loss: 14.6267 - val_accuracy: 0.4000\n","Epoch 97/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0314 - accuracy: 0.9956 - val_loss: 14.8306 - val_accuracy: 0.3800\n","Epoch 98/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1602 - accuracy: 0.9922 - val_loss: 14.6299 - val_accuracy: 0.3900\n","Epoch 99/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0200 - accuracy: 0.9956 - val_loss: 14.8301 - val_accuracy: 0.3900\n","Epoch 100/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0911 - accuracy: 0.9933 - val_loss: 15.1012 - val_accuracy: 0.4000\n","Epoch 101/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0272 - accuracy: 0.9956 - val_loss: 15.2416 - val_accuracy: 0.3900\n","Epoch 102/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1035 - accuracy: 0.9944 - val_loss: 15.8256 - val_accuracy: 0.3900\n","Epoch 103/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0074 - accuracy: 0.9978 - val_loss: 15.7272 - val_accuracy: 0.4100\n","Epoch 104/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0297 - accuracy: 0.9956 - val_loss: 15.5227 - val_accuracy: 0.4100\n","Epoch 105/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0982 - accuracy: 0.9956 - val_loss: 15.5031 - val_accuracy: 0.4100\n","Epoch 106/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0595 - accuracy: 0.9967 - val_loss: 15.1261 - val_accuracy: 0.4100\n","Epoch 107/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0203 - accuracy: 0.9956 - val_loss: 15.2896 - val_accuracy: 0.4100\n","Epoch 108/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0077 - accuracy: 0.9967 - val_loss: 15.4125 - val_accuracy: 0.4200\n","Epoch 109/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0097 - accuracy: 0.9967 - val_loss: 15.8232 - val_accuracy: 0.4000\n","Epoch 110/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0118 - accuracy: 0.9967 - val_loss: 16.1873 - val_accuracy: 0.4000\n","Epoch 111/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.1463 - accuracy: 0.9967 - val_loss: 15.9265 - val_accuracy: 0.4000\n","Epoch 112/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0052 - accuracy: 0.9989 - val_loss: 16.2933 - val_accuracy: 0.4100\n","Epoch 113/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0085 - accuracy: 0.9978 - val_loss: 16.3806 - val_accuracy: 0.4200\n","Epoch 114/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0525 - accuracy: 0.9900 - val_loss: 16.4171 - val_accuracy: 0.4100\n","Epoch 115/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0083 - accuracy: 0.9967 - val_loss: 16.2363 - val_accuracy: 0.4000\n","Epoch 116/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0052 - accuracy: 0.9989 - val_loss: 16.7252 - val_accuracy: 0.4200\n","Epoch 117/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0083 - accuracy: 0.9978 - val_loss: 16.6592 - val_accuracy: 0.4100\n","Epoch 118/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0080 - accuracy: 0.9978 - val_loss: 16.9059 - val_accuracy: 0.4000\n","Epoch 119/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0085 - accuracy: 0.9956 - val_loss: 16.9148 - val_accuracy: 0.4000\n","Epoch 120/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0230 - accuracy: 0.9967 - val_loss: 16.2988 - val_accuracy: 0.4000\n","Epoch 121/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0081 - accuracy: 0.9967 - val_loss: 16.4633 - val_accuracy: 0.4100\n","Epoch 122/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0441 - accuracy: 0.9956 - val_loss: 16.7941 - val_accuracy: 0.4100\n","Epoch 123/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0615 - accuracy: 0.9933 - val_loss: 16.7747 - val_accuracy: 0.4100\n","Epoch 124/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0398 - accuracy: 0.9967 - val_loss: 17.1804 - val_accuracy: 0.4100\n","Epoch 125/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0397 - accuracy: 0.9978 - val_loss: 16.9514 - val_accuracy: 0.4100\n","Epoch 126/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9978 - val_loss: 17.1057 - val_accuracy: 0.4100\n","Epoch 127/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0180 - accuracy: 0.9967 - val_loss: 17.5250 - val_accuracy: 0.4100\n","Epoch 128/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0489 - accuracy: 0.9967 - val_loss: 17.4379 - val_accuracy: 0.4100\n","Epoch 129/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0054 - accuracy: 0.9978 - val_loss: 17.5078 - val_accuracy: 0.4100\n","Epoch 130/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0033 - accuracy: 0.9989 - val_loss: 17.8204 - val_accuracy: 0.4100\n","Epoch 131/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.0073 - accuracy: 0.9978 - val_loss: 17.4567 - val_accuracy: 0.4200\n","Epoch 132/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0142 - accuracy: 0.9956 - val_loss: 17.6589 - val_accuracy: 0.4200\n","Epoch 133/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0118 - accuracy: 0.9978 - val_loss: 18.1329 - val_accuracy: 0.4200\n","Epoch 134/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0122 - accuracy: 0.9967 - val_loss: 17.9885 - val_accuracy: 0.4100\n","Epoch 135/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0087 - accuracy: 0.9967 - val_loss: 17.3427 - val_accuracy: 0.4100\n","Epoch 136/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0093 - accuracy: 0.9956 - val_loss: 17.7397 - val_accuracy: 0.4100\n","Epoch 137/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0324 - accuracy: 0.9978 - val_loss: 17.9884 - val_accuracy: 0.4100\n","Epoch 138/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0065 - accuracy: 0.9967 - val_loss: 17.9662 - val_accuracy: 0.4100\n","Epoch 139/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0061 - accuracy: 0.9989 - val_loss: 18.5882 - val_accuracy: 0.4100\n","Epoch 140/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0079 - accuracy: 0.9956 - val_loss: 18.5813 - val_accuracy: 0.4100\n","Epoch 141/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0370 - accuracy: 0.9978 - val_loss: 18.0967 - val_accuracy: 0.4100\n","Epoch 142/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0046 - accuracy: 0.9989 - val_loss: 18.9325 - val_accuracy: 0.4000\n","Epoch 143/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0061 - accuracy: 0.9989 - val_loss: 18.5948 - val_accuracy: 0.4000\n","Epoch 144/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0041 - accuracy: 0.9978 - val_loss: 18.7125 - val_accuracy: 0.4100\n","Epoch 145/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9989 - val_loss: 18.2196 - val_accuracy: 0.4200\n","Epoch 146/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0071 - accuracy: 0.9967 - val_loss: 18.3069 - val_accuracy: 0.4200\n","Epoch 147/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0020 - accuracy: 0.9989 - val_loss: 19.2815 - val_accuracy: 0.4100\n","Epoch 148/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0064 - accuracy: 0.9978 - val_loss: 19.4911 - val_accuracy: 0.4000\n","Epoch 149/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0156 - accuracy: 0.9956 - val_loss: 19.2438 - val_accuracy: 0.4100\n","Epoch 150/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0059 - accuracy: 0.9967 - val_loss: 19.9271 - val_accuracy: 0.4100\n","Epoch 151/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0075 - accuracy: 0.9967 - val_loss: 19.4713 - val_accuracy: 0.4200\n","Epoch 152/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0653 - accuracy: 0.9978 - val_loss: 19.3257 - val_accuracy: 0.4200\n","Epoch 153/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0186 - accuracy: 0.9956 - val_loss: 19.3407 - val_accuracy: 0.4300\n","Epoch 154/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0092 - accuracy: 0.9967 - val_loss: 19.2645 - val_accuracy: 0.4100\n","Epoch 155/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0101 - accuracy: 0.9978 - val_loss: 19.3323 - val_accuracy: 0.4200\n","Epoch 156/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0606 - accuracy: 0.9956 - val_loss: 19.5707 - val_accuracy: 0.4200\n","Epoch 157/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0043 - accuracy: 0.9978 - val_loss: 19.3539 - val_accuracy: 0.4200\n","Epoch 158/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.0049 - accuracy: 0.9978 - val_loss: 19.5173 - val_accuracy: 0.4200\n","Epoch 159/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0053 - accuracy: 0.9989 - val_loss: 18.9261 - val_accuracy: 0.4300\n","Epoch 160/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0040 - accuracy: 0.9989 - val_loss: 20.1987 - val_accuracy: 0.4100\n","Epoch 161/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0539 - accuracy: 0.9978 - val_loss: 19.3296 - val_accuracy: 0.4300\n","Epoch 162/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0051 - accuracy: 0.9989 - val_loss: 19.5189 - val_accuracy: 0.4200\n","Epoch 163/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0329 - accuracy: 0.9978 - val_loss: 19.4013 - val_accuracy: 0.4100\n","Epoch 164/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0431 - accuracy: 0.9967 - val_loss: 19.8108 - val_accuracy: 0.4200\n","Epoch 165/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0372 - accuracy: 0.9967 - val_loss: 19.7306 - val_accuracy: 0.4200\n","Epoch 166/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0046 - accuracy: 0.9978 - val_loss: 19.7555 - val_accuracy: 0.4200\n","Epoch 167/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0044 - accuracy: 0.9978 - val_loss: 20.0276 - val_accuracy: 0.4200\n","Epoch 168/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9978 - val_loss: 20.3632 - val_accuracy: 0.4100\n","Epoch 169/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0044 - accuracy: 0.9978 - val_loss: 20.6562 - val_accuracy: 0.4100\n","Epoch 170/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9978 - val_loss: 20.3641 - val_accuracy: 0.4200\n","Epoch 171/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9989 - val_loss: 20.8079 - val_accuracy: 0.4100\n","Epoch 172/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0059 - accuracy: 0.9978 - val_loss: 20.4319 - val_accuracy: 0.4200\n","Epoch 173/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0115 - accuracy: 0.9967 - val_loss: 20.5301 - val_accuracy: 0.4300\n","Epoch 174/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0043 - accuracy: 0.9978 - val_loss: 20.4403 - val_accuracy: 0.4300\n","Epoch 175/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0044 - accuracy: 0.9989 - val_loss: 20.8444 - val_accuracy: 0.4200\n","Epoch 176/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0064 - accuracy: 0.9967 - val_loss: 21.3853 - val_accuracy: 0.4200\n","Epoch 177/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0053 - accuracy: 0.9978 - val_loss: 21.5711 - val_accuracy: 0.4200\n","Epoch 178/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0048 - accuracy: 0.9978 - val_loss: 22.0806 - val_accuracy: 0.4200\n","Epoch 179/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0044 - accuracy: 0.9989 - val_loss: 21.1238 - val_accuracy: 0.4100\n","Epoch 180/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0056 - accuracy: 0.9978 - val_loss: 21.8549 - val_accuracy: 0.4200\n","Epoch 181/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0048 - accuracy: 0.9989 - val_loss: 22.0296 - val_accuracy: 0.4100\n","Epoch 182/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0058 - accuracy: 0.9989 - val_loss: 21.7154 - val_accuracy: 0.4100\n","Epoch 183/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0932 - accuracy: 0.9967 - val_loss: 21.9582 - val_accuracy: 0.4200\n","Epoch 184/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0308 - accuracy: 0.9967 - val_loss: 22.0248 - val_accuracy: 0.4000\n","Epoch 185/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0540 - accuracy: 0.9967 - val_loss: 22.0687 - val_accuracy: 0.4200\n","Epoch 186/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.0045 - accuracy: 0.9978 - val_loss: 22.0069 - val_accuracy: 0.4200\n","Epoch 187/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0053 - accuracy: 0.9989 - val_loss: 22.0030 - val_accuracy: 0.4100\n","Epoch 188/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.2425 - accuracy: 0.9967 - val_loss: 21.9570 - val_accuracy: 0.4200\n","Epoch 189/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0051 - accuracy: 0.9989 - val_loss: 22.1225 - val_accuracy: 0.4200\n","Epoch 190/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0049 - accuracy: 0.9989 - val_loss: 22.6335 - val_accuracy: 0.4100\n","Epoch 191/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.0062 - accuracy: 0.9989 - val_loss: 22.4796 - val_accuracy: 0.4100\n","Epoch 192/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0042 - accuracy: 0.9978 - val_loss: 22.5519 - val_accuracy: 0.4100\n","Epoch 193/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0059 - accuracy: 0.9989 - val_loss: 22.3073 - val_accuracy: 0.4200\n","Epoch 194/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0065 - accuracy: 0.9989 - val_loss: 22.8739 - val_accuracy: 0.4200\n","Epoch 195/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0051 - accuracy: 0.9978 - val_loss: 22.7915 - val_accuracy: 0.4100\n","Epoch 196/200\n","45/45 [==============================] - 0s 5ms/step - loss: 0.0439 - accuracy: 0.9978 - val_loss: 22.8785 - val_accuracy: 0.4200\n","Epoch 197/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0052 - accuracy: 0.9989 - val_loss: 23.0108 - val_accuracy: 0.4200\n","Epoch 198/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0053 - accuracy: 0.9978 - val_loss: 23.0293 - val_accuracy: 0.4100\n","Epoch 199/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0055 - accuracy: 0.9978 - val_loss: 22.7518 - val_accuracy: 0.4200\n","Epoch 200/200\n","45/45 [==============================] - 0s 4ms/step - loss: 0.0062 - accuracy: 0.9989 - val_loss: 22.8601 - val_accuracy: 0.4200\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Более сложная архитектура с ветвлением"],"metadata":{"id":"_hOYx3Olm22R"}},{"cell_type":"code","source":["# Нейросеть с базовым количеством параметров\n","\n","# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","input1 = Input((param_num,)) # Входной слой\n","\n","#создадим первую ветку с elu\n","x1 = Dense(100, activation=\"elu\")(input1) \n","x1 = Dense(200, activation=\"elu\")(x1)\n","\n","#создадим вторую ветку с softmaх\n","x2 = Dense(10, activation=\"elu\")(input1)\n","x2 = Dense(40, activation=\"softmax\")(x2)\n","\n","#объединяем ветки\n","x = concatenate([x1, x2])\n","\n","# Классифицирующий слои\n","x = Dense(10, activation='softmax')(x)\n","\n","model3 = Model(input1, x)\n","\n","#компилируем\n","model3.compile(optimizer=Adam(learning_rate=1e-5),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","#обучаем\n","history3 = model3.fit(xTrainS, yTrainS,\n","                    epochs=200,\n","                    batch_size=20,\n","                    validation_data=(xVal, yVal))\n","#выводим график обучения\n","plt.plot(history3.history[\"accuracy\"])\n","plt.plot(history3.history[\"val_accuracy\"])\n","plt.show()"],"metadata":{"id":"n3HorBUunArv","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1669626520410,"user_tz":-180,"elapsed":43818,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"3723455c-94fb-4566-f6f5-ee947bb920db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Количество аудио-параметров: 37\n","Количество жанров: 10\n","Epoch 1/200\n","45/45 [==============================] - 1s 8ms/step - loss: 2.4344 - accuracy: 0.1011 - val_loss: 2.2870 - val_accuracy: 0.1700\n","Epoch 2/200\n","45/45 [==============================] - 0s 5ms/step - loss: 2.3774 - accuracy: 0.1078 - val_loss: 2.2326 - val_accuracy: 0.2000\n","Epoch 3/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.3242 - accuracy: 0.1200 - val_loss: 2.1824 - val_accuracy: 0.2000\n","Epoch 4/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.2741 - accuracy: 0.1411 - val_loss: 2.1360 - val_accuracy: 0.2300\n","Epoch 5/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.2280 - accuracy: 0.1633 - val_loss: 2.0922 - val_accuracy: 0.2600\n","Epoch 6/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.1850 - accuracy: 0.2022 - val_loss: 2.0521 - val_accuracy: 0.2900\n","Epoch 7/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.1447 - accuracy: 0.2222 - val_loss: 2.0153 - val_accuracy: 0.2900\n","Epoch 8/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.1079 - accuracy: 0.2511 - val_loss: 1.9807 - val_accuracy: 0.2800\n","Epoch 9/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.0737 - accuracy: 0.2656 - val_loss: 1.9487 - val_accuracy: 0.2900\n","Epoch 10/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.0418 - accuracy: 0.2789 - val_loss: 1.9193 - val_accuracy: 0.3400\n","Epoch 11/200\n","45/45 [==============================] - 0s 4ms/step - loss: 2.0123 - accuracy: 0.2900 - val_loss: 1.8921 - val_accuracy: 0.3600\n","Epoch 12/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.9850 - accuracy: 0.3078 - val_loss: 1.8666 - val_accuracy: 0.3800\n","Epoch 13/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.9596 - accuracy: 0.3156 - val_loss: 1.8439 - val_accuracy: 0.4000\n","Epoch 14/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.9360 - accuracy: 0.3256 - val_loss: 1.8227 - val_accuracy: 0.4100\n","Epoch 15/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.9141 - accuracy: 0.3267 - val_loss: 1.8022 - val_accuracy: 0.4100\n","Epoch 16/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.8935 - accuracy: 0.3300 - val_loss: 1.7839 - val_accuracy: 0.4000\n","Epoch 17/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.8742 - accuracy: 0.3367 - val_loss: 1.7663 - val_accuracy: 0.3900\n","Epoch 18/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.8563 - accuracy: 0.3400 - val_loss: 1.7504 - val_accuracy: 0.3900\n","Epoch 19/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.8392 - accuracy: 0.3444 - val_loss: 1.7347 - val_accuracy: 0.3900\n","Epoch 20/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.8232 - accuracy: 0.3478 - val_loss: 1.7203 - val_accuracy: 0.4100\n","Epoch 21/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.8080 - accuracy: 0.3489 - val_loss: 1.7068 - val_accuracy: 0.4100\n","Epoch 22/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7938 - accuracy: 0.3500 - val_loss: 1.6940 - val_accuracy: 0.4100\n","Epoch 23/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7800 - accuracy: 0.3511 - val_loss: 1.6816 - val_accuracy: 0.4300\n","Epoch 24/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.7671 - accuracy: 0.3578 - val_loss: 1.6701 - val_accuracy: 0.4400\n","Epoch 25/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7547 - accuracy: 0.3633 - val_loss: 1.6592 - val_accuracy: 0.4300\n","Epoch 26/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.7430 - accuracy: 0.3667 - val_loss: 1.6484 - val_accuracy: 0.4300\n","Epoch 27/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7316 - accuracy: 0.3700 - val_loss: 1.6389 - val_accuracy: 0.4300\n","Epoch 28/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7209 - accuracy: 0.3722 - val_loss: 1.6293 - val_accuracy: 0.4300\n","Epoch 29/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7106 - accuracy: 0.3722 - val_loss: 1.6197 - val_accuracy: 0.4500\n","Epoch 30/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.7006 - accuracy: 0.3744 - val_loss: 1.6108 - val_accuracy: 0.4500\n","Epoch 31/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6911 - accuracy: 0.3811 - val_loss: 1.6020 - val_accuracy: 0.4400\n","Epoch 32/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6820 - accuracy: 0.3833 - val_loss: 1.5936 - val_accuracy: 0.4500\n","Epoch 33/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6729 - accuracy: 0.3867 - val_loss: 1.5859 - val_accuracy: 0.4500\n","Epoch 34/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6643 - accuracy: 0.3878 - val_loss: 1.5783 - val_accuracy: 0.4600\n","Epoch 35/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6563 - accuracy: 0.3889 - val_loss: 1.5709 - val_accuracy: 0.4600\n","Epoch 36/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6480 - accuracy: 0.3922 - val_loss: 1.5633 - val_accuracy: 0.4600\n","Epoch 37/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6403 - accuracy: 0.3944 - val_loss: 1.5556 - val_accuracy: 0.4600\n","Epoch 38/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6328 - accuracy: 0.4000 - val_loss: 1.5494 - val_accuracy: 0.4500\n","Epoch 39/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6255 - accuracy: 0.4033 - val_loss: 1.5421 - val_accuracy: 0.4500\n","Epoch 40/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6182 - accuracy: 0.4078 - val_loss: 1.5357 - val_accuracy: 0.4500\n","Epoch 41/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6113 - accuracy: 0.4111 - val_loss: 1.5292 - val_accuracy: 0.4500\n","Epoch 42/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.6045 - accuracy: 0.4100 - val_loss: 1.5230 - val_accuracy: 0.4500\n","Epoch 43/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5981 - accuracy: 0.4111 - val_loss: 1.5173 - val_accuracy: 0.4600\n","Epoch 44/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5917 - accuracy: 0.4078 - val_loss: 1.5107 - val_accuracy: 0.4700\n","Epoch 45/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5854 - accuracy: 0.4100 - val_loss: 1.5047 - val_accuracy: 0.4700\n","Epoch 46/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5794 - accuracy: 0.4122 - val_loss: 1.4993 - val_accuracy: 0.4700\n","Epoch 47/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5734 - accuracy: 0.4211 - val_loss: 1.4931 - val_accuracy: 0.4800\n","Epoch 48/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5677 - accuracy: 0.4267 - val_loss: 1.4878 - val_accuracy: 0.4700\n","Epoch 49/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5619 - accuracy: 0.4289 - val_loss: 1.4823 - val_accuracy: 0.4700\n","Epoch 50/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5564 - accuracy: 0.4322 - val_loss: 1.4768 - val_accuracy: 0.4800\n","Epoch 51/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5508 - accuracy: 0.4333 - val_loss: 1.4721 - val_accuracy: 0.4800\n","Epoch 52/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.5457 - accuracy: 0.4344 - val_loss: 1.4668 - val_accuracy: 0.4900\n","Epoch 53/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5404 - accuracy: 0.4378 - val_loss: 1.4616 - val_accuracy: 0.4900\n","Epoch 54/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5352 - accuracy: 0.4389 - val_loss: 1.4567 - val_accuracy: 0.4900\n","Epoch 55/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5303 - accuracy: 0.4411 - val_loss: 1.4515 - val_accuracy: 0.4900\n","Epoch 56/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5252 - accuracy: 0.4478 - val_loss: 1.4470 - val_accuracy: 0.4900\n","Epoch 57/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5204 - accuracy: 0.4489 - val_loss: 1.4419 - val_accuracy: 0.5000\n","Epoch 58/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5157 - accuracy: 0.4522 - val_loss: 1.4374 - val_accuracy: 0.5000\n","Epoch 59/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5110 - accuracy: 0.4556 - val_loss: 1.4333 - val_accuracy: 0.5000\n","Epoch 60/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.5065 - accuracy: 0.4589 - val_loss: 1.4286 - val_accuracy: 0.5000\n","Epoch 61/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.5020 - accuracy: 0.4589 - val_loss: 1.4240 - val_accuracy: 0.5000\n","Epoch 62/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4976 - accuracy: 0.4589 - val_loss: 1.4199 - val_accuracy: 0.5000\n","Epoch 63/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4932 - accuracy: 0.4611 - val_loss: 1.4153 - val_accuracy: 0.5100\n","Epoch 64/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4889 - accuracy: 0.4611 - val_loss: 1.4106 - val_accuracy: 0.5100\n","Epoch 65/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4849 - accuracy: 0.4611 - val_loss: 1.4067 - val_accuracy: 0.5100\n","Epoch 66/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4808 - accuracy: 0.4633 - val_loss: 1.4025 - val_accuracy: 0.5100\n","Epoch 67/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4766 - accuracy: 0.4656 - val_loss: 1.3984 - val_accuracy: 0.5100\n","Epoch 68/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4725 - accuracy: 0.4644 - val_loss: 1.3945 - val_accuracy: 0.5200\n","Epoch 69/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4686 - accuracy: 0.4678 - val_loss: 1.3905 - val_accuracy: 0.5200\n","Epoch 70/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4646 - accuracy: 0.4678 - val_loss: 1.3868 - val_accuracy: 0.5200\n","Epoch 71/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4608 - accuracy: 0.4700 - val_loss: 1.3834 - val_accuracy: 0.5200\n","Epoch 72/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4570 - accuracy: 0.4700 - val_loss: 1.3793 - val_accuracy: 0.5200\n","Epoch 73/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4532 - accuracy: 0.4756 - val_loss: 1.3754 - val_accuracy: 0.5200\n","Epoch 74/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4499 - accuracy: 0.4789 - val_loss: 1.3713 - val_accuracy: 0.5200\n","Epoch 75/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4460 - accuracy: 0.4767 - val_loss: 1.3683 - val_accuracy: 0.5200\n","Epoch 76/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4425 - accuracy: 0.4800 - val_loss: 1.3649 - val_accuracy: 0.5200\n","Epoch 77/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4388 - accuracy: 0.4811 - val_loss: 1.3614 - val_accuracy: 0.5200\n","Epoch 78/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4355 - accuracy: 0.4867 - val_loss: 1.3582 - val_accuracy: 0.5200\n","Epoch 79/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4320 - accuracy: 0.4867 - val_loss: 1.3548 - val_accuracy: 0.5200\n","Epoch 80/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4286 - accuracy: 0.4889 - val_loss: 1.3515 - val_accuracy: 0.5200\n","Epoch 81/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4254 - accuracy: 0.4900 - val_loss: 1.3480 - val_accuracy: 0.5200\n","Epoch 82/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4219 - accuracy: 0.4944 - val_loss: 1.3447 - val_accuracy: 0.5300\n","Epoch 83/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4185 - accuracy: 0.4967 - val_loss: 1.3419 - val_accuracy: 0.5300\n","Epoch 84/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4154 - accuracy: 0.4956 - val_loss: 1.3384 - val_accuracy: 0.5300\n","Epoch 85/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4122 - accuracy: 0.4989 - val_loss: 1.3352 - val_accuracy: 0.5300\n","Epoch 86/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4090 - accuracy: 0.5011 - val_loss: 1.3322 - val_accuracy: 0.5300\n","Epoch 87/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4058 - accuracy: 0.5022 - val_loss: 1.3293 - val_accuracy: 0.5300\n","Epoch 88/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.4027 - accuracy: 0.4989 - val_loss: 1.3263 - val_accuracy: 0.5300\n","Epoch 89/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3998 - accuracy: 0.5078 - val_loss: 1.3231 - val_accuracy: 0.5300\n","Epoch 90/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3968 - accuracy: 0.5100 - val_loss: 1.3203 - val_accuracy: 0.5400\n","Epoch 91/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3938 - accuracy: 0.5144 - val_loss: 1.3173 - val_accuracy: 0.5400\n","Epoch 92/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3909 - accuracy: 0.5178 - val_loss: 1.3154 - val_accuracy: 0.5500\n","Epoch 93/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3879 - accuracy: 0.5189 - val_loss: 1.3116 - val_accuracy: 0.5400\n","Epoch 94/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3849 - accuracy: 0.5200 - val_loss: 1.3092 - val_accuracy: 0.5500\n","Epoch 95/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3822 - accuracy: 0.5233 - val_loss: 1.3061 - val_accuracy: 0.5600\n","Epoch 96/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3793 - accuracy: 0.5233 - val_loss: 1.3039 - val_accuracy: 0.5600\n","Epoch 97/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3765 - accuracy: 0.5244 - val_loss: 1.3011 - val_accuracy: 0.5600\n","Epoch 98/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3738 - accuracy: 0.5278 - val_loss: 1.2980 - val_accuracy: 0.5600\n","Epoch 99/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3710 - accuracy: 0.5278 - val_loss: 1.2958 - val_accuracy: 0.5600\n","Epoch 100/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3683 - accuracy: 0.5300 - val_loss: 1.2926 - val_accuracy: 0.5600\n","Epoch 101/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3657 - accuracy: 0.5289 - val_loss: 1.2907 - val_accuracy: 0.5600\n","Epoch 102/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3630 - accuracy: 0.5322 - val_loss: 1.2884 - val_accuracy: 0.5600\n","Epoch 103/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3603 - accuracy: 0.5356 - val_loss: 1.2857 - val_accuracy: 0.5600\n","Epoch 104/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3576 - accuracy: 0.5400 - val_loss: 1.2833 - val_accuracy: 0.5600\n","Epoch 105/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3551 - accuracy: 0.5378 - val_loss: 1.2805 - val_accuracy: 0.5600\n","Epoch 106/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3525 - accuracy: 0.5389 - val_loss: 1.2777 - val_accuracy: 0.5600\n","Epoch 107/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3499 - accuracy: 0.5378 - val_loss: 1.2761 - val_accuracy: 0.5600\n","Epoch 108/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3473 - accuracy: 0.5400 - val_loss: 1.2736 - val_accuracy: 0.5600\n","Epoch 109/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3449 - accuracy: 0.5422 - val_loss: 1.2717 - val_accuracy: 0.5600\n","Epoch 110/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3424 - accuracy: 0.5411 - val_loss: 1.2689 - val_accuracy: 0.5600\n","Epoch 111/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3400 - accuracy: 0.5422 - val_loss: 1.2671 - val_accuracy: 0.5600\n","Epoch 112/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3375 - accuracy: 0.5433 - val_loss: 1.2648 - val_accuracy: 0.5600\n","Epoch 113/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3352 - accuracy: 0.5478 - val_loss: 1.2629 - val_accuracy: 0.5600\n","Epoch 114/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3330 - accuracy: 0.5522 - val_loss: 1.2603 - val_accuracy: 0.5600\n","Epoch 115/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3304 - accuracy: 0.5500 - val_loss: 1.2581 - val_accuracy: 0.5600\n","Epoch 116/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3279 - accuracy: 0.5511 - val_loss: 1.2561 - val_accuracy: 0.5600\n","Epoch 117/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.3258 - accuracy: 0.5500 - val_loss: 1.2539 - val_accuracy: 0.5600\n","Epoch 118/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3233 - accuracy: 0.5511 - val_loss: 1.2518 - val_accuracy: 0.5600\n","Epoch 119/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3211 - accuracy: 0.5533 - val_loss: 1.2492 - val_accuracy: 0.5600\n","Epoch 120/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3189 - accuracy: 0.5522 - val_loss: 1.2476 - val_accuracy: 0.5600\n","Epoch 121/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3165 - accuracy: 0.5567 - val_loss: 1.2453 - val_accuracy: 0.5700\n","Epoch 122/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3143 - accuracy: 0.5578 - val_loss: 1.2438 - val_accuracy: 0.5600\n","Epoch 123/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3122 - accuracy: 0.5589 - val_loss: 1.2415 - val_accuracy: 0.5800\n","Epoch 124/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3098 - accuracy: 0.5611 - val_loss: 1.2389 - val_accuracy: 0.5800\n","Epoch 125/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3078 - accuracy: 0.5611 - val_loss: 1.2377 - val_accuracy: 0.5700\n","Epoch 126/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3056 - accuracy: 0.5622 - val_loss: 1.2352 - val_accuracy: 0.5800\n","Epoch 127/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.3033 - accuracy: 0.5622 - val_loss: 1.2338 - val_accuracy: 0.5800\n","Epoch 128/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.3012 - accuracy: 0.5656 - val_loss: 1.2323 - val_accuracy: 0.5800\n","Epoch 129/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2992 - accuracy: 0.5667 - val_loss: 1.2300 - val_accuracy: 0.5800\n","Epoch 130/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2968 - accuracy: 0.5678 - val_loss: 1.2282 - val_accuracy: 0.5800\n","Epoch 131/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2949 - accuracy: 0.5678 - val_loss: 1.2262 - val_accuracy: 0.5800\n","Epoch 132/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2927 - accuracy: 0.5689 - val_loss: 1.2243 - val_accuracy: 0.5800\n","Epoch 133/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2908 - accuracy: 0.5711 - val_loss: 1.2231 - val_accuracy: 0.5800\n","Epoch 134/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.2886 - accuracy: 0.5722 - val_loss: 1.2207 - val_accuracy: 0.5800\n","Epoch 135/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2866 - accuracy: 0.5733 - val_loss: 1.2198 - val_accuracy: 0.5800\n","Epoch 136/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2845 - accuracy: 0.5744 - val_loss: 1.2170 - val_accuracy: 0.5800\n","Epoch 137/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2825 - accuracy: 0.5733 - val_loss: 1.2153 - val_accuracy: 0.5800\n","Epoch 138/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2805 - accuracy: 0.5744 - val_loss: 1.2138 - val_accuracy: 0.5800\n","Epoch 139/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2786 - accuracy: 0.5767 - val_loss: 1.2126 - val_accuracy: 0.5800\n","Epoch 140/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2765 - accuracy: 0.5767 - val_loss: 1.2105 - val_accuracy: 0.5800\n","Epoch 141/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2747 - accuracy: 0.5778 - val_loss: 1.2090 - val_accuracy: 0.5800\n","Epoch 142/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2727 - accuracy: 0.5789 - val_loss: 1.2070 - val_accuracy: 0.5800\n","Epoch 143/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2708 - accuracy: 0.5789 - val_loss: 1.2058 - val_accuracy: 0.5800\n","Epoch 144/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2690 - accuracy: 0.5800 - val_loss: 1.2040 - val_accuracy: 0.5800\n","Epoch 145/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2669 - accuracy: 0.5833 - val_loss: 1.2028 - val_accuracy: 0.5900\n","Epoch 146/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2650 - accuracy: 0.5833 - val_loss: 1.2005 - val_accuracy: 0.5800\n","Epoch 147/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2631 - accuracy: 0.5822 - val_loss: 1.1994 - val_accuracy: 0.5900\n","Epoch 148/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2613 - accuracy: 0.5833 - val_loss: 1.1974 - val_accuracy: 0.5900\n","Epoch 149/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2595 - accuracy: 0.5833 - val_loss: 1.1959 - val_accuracy: 0.5900\n","Epoch 150/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2575 - accuracy: 0.5833 - val_loss: 1.1947 - val_accuracy: 0.5900\n","Epoch 151/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2558 - accuracy: 0.5833 - val_loss: 1.1934 - val_accuracy: 0.6000\n","Epoch 152/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2538 - accuracy: 0.5833 - val_loss: 1.1917 - val_accuracy: 0.6000\n","Epoch 153/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2522 - accuracy: 0.5833 - val_loss: 1.1908 - val_accuracy: 0.6000\n","Epoch 154/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2503 - accuracy: 0.5833 - val_loss: 1.1887 - val_accuracy: 0.6000\n","Epoch 155/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2484 - accuracy: 0.5844 - val_loss: 1.1871 - val_accuracy: 0.6000\n","Epoch 156/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2470 - accuracy: 0.5856 - val_loss: 1.1854 - val_accuracy: 0.6000\n","Epoch 157/200\n","45/45 [==============================] - 0s 3ms/step - loss: 1.2449 - accuracy: 0.5844 - val_loss: 1.1840 - val_accuracy: 0.6000\n","Epoch 158/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2431 - accuracy: 0.5833 - val_loss: 1.1829 - val_accuracy: 0.6000\n","Epoch 159/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2414 - accuracy: 0.5833 - val_loss: 1.1813 - val_accuracy: 0.6000\n","Epoch 160/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2397 - accuracy: 0.5822 - val_loss: 1.1802 - val_accuracy: 0.6100\n","Epoch 161/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2380 - accuracy: 0.5833 - val_loss: 1.1787 - val_accuracy: 0.6100\n","Epoch 162/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2362 - accuracy: 0.5833 - val_loss: 1.1771 - val_accuracy: 0.6100\n","Epoch 163/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2346 - accuracy: 0.5833 - val_loss: 1.1762 - val_accuracy: 0.6100\n","Epoch 164/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.2328 - accuracy: 0.5833 - val_loss: 1.1753 - val_accuracy: 0.6100\n","Epoch 165/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2311 - accuracy: 0.5844 - val_loss: 1.1732 - val_accuracy: 0.6100\n","Epoch 166/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2294 - accuracy: 0.5867 - val_loss: 1.1719 - val_accuracy: 0.6100\n","Epoch 167/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2279 - accuracy: 0.5900 - val_loss: 1.1707 - val_accuracy: 0.6100\n","Epoch 168/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2261 - accuracy: 0.5878 - val_loss: 1.1693 - val_accuracy: 0.6100\n","Epoch 169/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2245 - accuracy: 0.5889 - val_loss: 1.1679 - val_accuracy: 0.6100\n","Epoch 170/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2228 - accuracy: 0.5878 - val_loss: 1.1670 - val_accuracy: 0.6100\n","Epoch 171/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2212 - accuracy: 0.5922 - val_loss: 1.1660 - val_accuracy: 0.6100\n","Epoch 172/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2195 - accuracy: 0.5889 - val_loss: 1.1644 - val_accuracy: 0.6100\n","Epoch 173/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2180 - accuracy: 0.5911 - val_loss: 1.1631 - val_accuracy: 0.6100\n","Epoch 174/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.2164 - accuracy: 0.5944 - val_loss: 1.1619 - val_accuracy: 0.6100\n","Epoch 175/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2148 - accuracy: 0.5911 - val_loss: 1.1600 - val_accuracy: 0.6100\n","Epoch 176/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2133 - accuracy: 0.5944 - val_loss: 1.1589 - val_accuracy: 0.6100\n","Epoch 177/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2116 - accuracy: 0.5933 - val_loss: 1.1581 - val_accuracy: 0.6100\n","Epoch 178/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2099 - accuracy: 0.5944 - val_loss: 1.1567 - val_accuracy: 0.6100\n","Epoch 179/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2086 - accuracy: 0.5956 - val_loss: 1.1559 - val_accuracy: 0.6100\n","Epoch 180/200\n","45/45 [==============================] - 0s 5ms/step - loss: 1.2069 - accuracy: 0.5956 - val_loss: 1.1539 - val_accuracy: 0.6100\n","Epoch 181/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2053 - accuracy: 0.5967 - val_loss: 1.1532 - val_accuracy: 0.6100\n","Epoch 182/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2037 - accuracy: 0.5956 - val_loss: 1.1520 - val_accuracy: 0.6100\n","Epoch 183/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2022 - accuracy: 0.5978 - val_loss: 1.1515 - val_accuracy: 0.6100\n","Epoch 184/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.2008 - accuracy: 0.5967 - val_loss: 1.1496 - val_accuracy: 0.6100\n","Epoch 185/200\n","45/45 [==============================] - 0s 6ms/step - loss: 1.1993 - accuracy: 0.5978 - val_loss: 1.1488 - val_accuracy: 0.6100\n","Epoch 186/200\n","45/45 [==============================] - 0s 6ms/step - loss: 1.1977 - accuracy: 0.5978 - val_loss: 1.1475 - val_accuracy: 0.6100\n","Epoch 187/200\n","45/45 [==============================] - 1s 13ms/step - loss: 1.1962 - accuracy: 0.5967 - val_loss: 1.1468 - val_accuracy: 0.6100\n","Epoch 188/200\n","45/45 [==============================] - 0s 9ms/step - loss: 1.1947 - accuracy: 0.6011 - val_loss: 1.1453 - val_accuracy: 0.6100\n","Epoch 189/200\n","45/45 [==============================] - 0s 9ms/step - loss: 1.1934 - accuracy: 0.6011 - val_loss: 1.1444 - val_accuracy: 0.6100\n","Epoch 190/200\n","45/45 [==============================] - 0s 7ms/step - loss: 1.1917 - accuracy: 0.6011 - val_loss: 1.1431 - val_accuracy: 0.6100\n","Epoch 191/200\n","45/45 [==============================] - 1s 13ms/step - loss: 1.1902 - accuracy: 0.6000 - val_loss: 1.1425 - val_accuracy: 0.6100\n","Epoch 192/200\n","45/45 [==============================] - 1s 16ms/step - loss: 1.1888 - accuracy: 0.6000 - val_loss: 1.1412 - val_accuracy: 0.6100\n","Epoch 193/200\n","45/45 [==============================] - 0s 7ms/step - loss: 1.1873 - accuracy: 0.6011 - val_loss: 1.1400 - val_accuracy: 0.6100\n","Epoch 194/200\n","45/45 [==============================] - 0s 10ms/step - loss: 1.1860 - accuracy: 0.6011 - val_loss: 1.1388 - val_accuracy: 0.6100\n","Epoch 195/200\n","45/45 [==============================] - 0s 9ms/step - loss: 1.1845 - accuracy: 0.6011 - val_loss: 1.1383 - val_accuracy: 0.6100\n","Epoch 196/200\n","45/45 [==============================] - 0s 4ms/step - loss: 1.1829 - accuracy: 0.6022 - val_loss: 1.1366 - val_accuracy: 0.6100\n","Epoch 197/200\n","45/45 [==============================] - 0s 7ms/step - loss: 1.1816 - accuracy: 0.6022 - val_loss: 1.1361 - val_accuracy: 0.6000\n","Epoch 198/200\n","45/45 [==============================] - 0s 9ms/step - loss: 1.1802 - accuracy: 0.6033 - val_loss: 1.1349 - val_accuracy: 0.6000\n","Epoch 199/200\n","45/45 [==============================] - 0s 7ms/step - loss: 1.1788 - accuracy: 0.6011 - val_loss: 1.1339 - val_accuracy: 0.6000\n","Epoch 200/200\n","45/45 [==============================] - 0s 9ms/step - loss: 1.1773 - accuracy: 0.6011 - val_loss: 1.1330 - val_accuracy: 0.6000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Нейросеть с 7-ю ветками"],"metadata":{"id":"3RDOO-ROoqxq"}},{"cell_type":"code","source":["# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","#поменяем количество нейронов в слоях и добавим нормальзацию после кажного слоя\n","input1 = Input((param_num,))\n","\n","x1 = Dense(1256, activation=\"elu\")(input1)\n","x1 = Dense(1256, activation=\"elu\")(x1)\n","\n","x2 = Dense(256, activation=\"elu\")(input1)\n","x2 = Dense(40, activation=\"softmax\")(x2)\n","\n","x3 = Dense(256, activation=\"elu\")(input1)\n","x3 = Dense(200, activation=\"softmax\")(x3)\n","\n","x4 = Dense(40, activation=\"softmax\")(input1)\n","\n","x5 = Dense(200, activation=\"softmax\")(input1)\n","\n","x6 = Dense(10, activation=\"softmax\")(input1)\n","\n","x7 = Dense(256, activation=\"elu\")(input1)\n","x7 = Dense(1240, activation=\"softmax\")(x7)\n","\n","x = concatenate([x1, x2, x3, x4, x5, x6, x7])\n","\n","x = BatchNormalization()(x)\n","x = Dense(10, activation='softmax')(x)\n","\n","model4 = Model(input1, x)\n","#компилируем\n","model4.compile(optimizer=RMSprop(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","#обучаем\n","history4 = model4.fit(xTrainS, yTrainS,\n","                    epochs=200,\n","                    batch_size=20,\n","                    validation_data=(xVal, yVal))\n","#выводим гарфик обучения\n","plt.plot(history4.history[\"accuracy\"])\n","plt.plot(history4.history[\"val_accuracy\"])\n","plt.show()"],"metadata":{"id":"ya3KdOmCoti6","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1669629753120,"user_tz":-180,"elapsed":339330,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"95c66577-647b-49f0-a46d-8d74b322c574"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Количество аудио-параметров: 37\n","Количество жанров: 10\n","Epoch 1/200\n","45/45 [==============================] - 4s 37ms/step - loss: 1.6593 - accuracy: 0.4267 - val_loss: 1.7560 - val_accuracy: 0.5900\n","Epoch 2/200\n","45/45 [==============================] - 1s 32ms/step - loss: 1.3684 - accuracy: 0.5411 - val_loss: 1.5590 - val_accuracy: 0.5600\n","Epoch 3/200\n","45/45 [==============================] - 1s 33ms/step - loss: 1.2545 - accuracy: 0.5711 - val_loss: 1.4177 - val_accuracy: 0.6400\n","Epoch 4/200\n","45/45 [==============================] - 1s 33ms/step - loss: 1.2492 - accuracy: 0.5656 - val_loss: 1.3783 - val_accuracy: 0.5800\n","Epoch 5/200\n","45/45 [==============================] - 1s 32ms/step - loss: 1.1805 - accuracy: 0.6033 - val_loss: 1.3349 - val_accuracy: 0.5200\n","Epoch 6/200\n","45/45 [==============================] - 1s 31ms/step - loss: 1.1390 - accuracy: 0.6089 - val_loss: 1.2230 - val_accuracy: 0.6000\n","Epoch 7/200\n","45/45 [==============================] - 1s 33ms/step - loss: 1.1317 - accuracy: 0.6144 - val_loss: 1.1517 - val_accuracy: 0.6000\n","Epoch 8/200\n","45/45 [==============================] - 1s 32ms/step - loss: 1.0807 - accuracy: 0.6411 - val_loss: 1.1219 - val_accuracy: 0.6100\n","Epoch 9/200\n","45/45 [==============================] - 2s 34ms/step - loss: 1.0556 - accuracy: 0.6433 - val_loss: 1.1306 - val_accuracy: 0.6100\n","Epoch 10/200\n","45/45 [==============================] - 1s 33ms/step - loss: 1.0423 - accuracy: 0.6467 - val_loss: 1.1055 - val_accuracy: 0.6300\n","Epoch 11/200\n","45/45 [==============================] - 1s 32ms/step - loss: 1.0344 - accuracy: 0.6400 - val_loss: 1.1296 - val_accuracy: 0.6100\n","Epoch 12/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.9799 - accuracy: 0.6578 - val_loss: 1.1087 - val_accuracy: 0.6600\n","Epoch 13/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.9708 - accuracy: 0.6789 - val_loss: 1.1851 - val_accuracy: 0.6200\n","Epoch 14/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.9629 - accuracy: 0.6600 - val_loss: 1.1242 - val_accuracy: 0.6200\n","Epoch 15/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.9637 - accuracy: 0.6667 - val_loss: 1.1520 - val_accuracy: 0.5900\n","Epoch 16/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.9335 - accuracy: 0.6800 - val_loss: 1.1845 - val_accuracy: 0.5800\n","Epoch 17/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.9254 - accuracy: 0.6611 - val_loss: 1.1155 - val_accuracy: 0.6300\n","Epoch 18/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.8965 - accuracy: 0.6856 - val_loss: 1.3652 - val_accuracy: 0.5400\n","Epoch 19/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.8799 - accuracy: 0.6989 - val_loss: 1.2113 - val_accuracy: 0.5700\n","Epoch 20/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.8612 - accuracy: 0.7011 - val_loss: 1.1073 - val_accuracy: 0.6300\n","Epoch 21/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.8822 - accuracy: 0.7022 - val_loss: 1.1131 - val_accuracy: 0.6000\n","Epoch 22/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.8427 - accuracy: 0.7211 - val_loss: 1.0564 - val_accuracy: 0.6200\n","Epoch 23/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.8622 - accuracy: 0.7011 - val_loss: 1.1256 - val_accuracy: 0.6400\n","Epoch 24/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.8332 - accuracy: 0.7078 - val_loss: 1.1062 - val_accuracy: 0.6000\n","Epoch 25/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.8077 - accuracy: 0.7133 - val_loss: 1.1733 - val_accuracy: 0.5800\n","Epoch 26/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.7934 - accuracy: 0.7289 - val_loss: 1.1971 - val_accuracy: 0.6100\n","Epoch 27/200\n","45/45 [==============================] - 2s 43ms/step - loss: 0.7978 - accuracy: 0.7156 - val_loss: 1.1574 - val_accuracy: 0.6200\n","Epoch 28/200\n","45/45 [==============================] - 3s 57ms/step - loss: 0.7807 - accuracy: 0.7289 - val_loss: 1.1255 - val_accuracy: 0.6300\n","Epoch 29/200\n","45/45 [==============================] - 3s 62ms/step - loss: 0.7783 - accuracy: 0.7267 - val_loss: 1.1173 - val_accuracy: 0.6000\n","Epoch 30/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.7954 - accuracy: 0.7289 - val_loss: 1.1428 - val_accuracy: 0.6100\n","Epoch 31/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.7611 - accuracy: 0.7456 - val_loss: 1.1079 - val_accuracy: 0.6500\n","Epoch 32/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.7323 - accuracy: 0.7544 - val_loss: 1.1566 - val_accuracy: 0.6300\n","Epoch 33/200\n","45/45 [==============================] - 2s 41ms/step - loss: 0.7509 - accuracy: 0.7356 - val_loss: 1.1603 - val_accuracy: 0.5900\n","Epoch 34/200\n","45/45 [==============================] - 3s 64ms/step - loss: 0.7141 - accuracy: 0.7611 - val_loss: 1.1070 - val_accuracy: 0.6300\n","Epoch 35/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.6729 - accuracy: 0.7789 - val_loss: 1.0954 - val_accuracy: 0.6300\n","Epoch 36/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.7212 - accuracy: 0.7500 - val_loss: 1.1516 - val_accuracy: 0.6600\n","Epoch 37/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.6798 - accuracy: 0.7578 - val_loss: 1.1345 - val_accuracy: 0.6500\n","Epoch 38/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.7102 - accuracy: 0.7444 - val_loss: 1.1877 - val_accuracy: 0.6100\n","Epoch 39/200\n","45/45 [==============================] - 2s 40ms/step - loss: 0.6941 - accuracy: 0.7611 - val_loss: 1.0895 - val_accuracy: 0.6600\n","Epoch 40/200\n","45/45 [==============================] - 2s 40ms/step - loss: 0.6774 - accuracy: 0.7611 - val_loss: 1.1387 - val_accuracy: 0.5900\n","Epoch 41/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.6693 - accuracy: 0.7822 - val_loss: 1.1235 - val_accuracy: 0.6500\n","Epoch 42/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.6474 - accuracy: 0.7911 - val_loss: 1.1474 - val_accuracy: 0.6300\n","Epoch 43/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.6509 - accuracy: 0.7744 - val_loss: 1.1735 - val_accuracy: 0.6100\n","Epoch 44/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.6053 - accuracy: 0.8033 - val_loss: 1.1449 - val_accuracy: 0.6300\n","Epoch 45/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.6261 - accuracy: 0.7833 - val_loss: 1.1177 - val_accuracy: 0.6500\n","Epoch 46/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.6159 - accuracy: 0.7911 - val_loss: 1.1560 - val_accuracy: 0.6300\n","Epoch 47/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.6153 - accuracy: 0.7844 - val_loss: 1.0711 - val_accuracy: 0.6300\n","Epoch 48/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.6027 - accuracy: 0.7900 - val_loss: 1.1216 - val_accuracy: 0.6500\n","Epoch 49/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.6207 - accuracy: 0.8078 - val_loss: 1.1112 - val_accuracy: 0.6300\n","Epoch 50/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.5919 - accuracy: 0.7922 - val_loss: 1.0678 - val_accuracy: 0.6700\n","Epoch 51/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5963 - accuracy: 0.8022 - val_loss: 1.1649 - val_accuracy: 0.6200\n","Epoch 52/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.5668 - accuracy: 0.8056 - val_loss: 1.1220 - val_accuracy: 0.6100\n","Epoch 53/200\n","45/45 [==============================] - 1s 31ms/step - loss: 0.5542 - accuracy: 0.8133 - val_loss: 1.1022 - val_accuracy: 0.6200\n","Epoch 54/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5625 - accuracy: 0.8056 - val_loss: 1.1149 - val_accuracy: 0.6500\n","Epoch 55/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.5396 - accuracy: 0.8233 - val_loss: 1.0691 - val_accuracy: 0.6500\n","Epoch 56/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5389 - accuracy: 0.8211 - val_loss: 1.1262 - val_accuracy: 0.6400\n","Epoch 57/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5268 - accuracy: 0.8233 - val_loss: 1.0807 - val_accuracy: 0.6300\n","Epoch 58/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5515 - accuracy: 0.8167 - val_loss: 1.0431 - val_accuracy: 0.6400\n","Epoch 59/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.5442 - accuracy: 0.8300 - val_loss: 1.1468 - val_accuracy: 0.6500\n","Epoch 60/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.4927 - accuracy: 0.8456 - val_loss: 1.1057 - val_accuracy: 0.6500\n","Epoch 61/200\n","45/45 [==============================] - 2s 46ms/step - loss: 0.5275 - accuracy: 0.8356 - val_loss: 1.0785 - val_accuracy: 0.6400\n","Epoch 62/200\n","45/45 [==============================] - 3s 63ms/step - loss: 0.5153 - accuracy: 0.8289 - val_loss: 1.1403 - val_accuracy: 0.6300\n","Epoch 63/200\n","45/45 [==============================] - 3s 63ms/step - loss: 0.5136 - accuracy: 0.8333 - val_loss: 1.1154 - val_accuracy: 0.6700\n","Epoch 64/200\n","45/45 [==============================] - 3s 68ms/step - loss: 0.4766 - accuracy: 0.8400 - val_loss: 1.0759 - val_accuracy: 0.6600\n","Epoch 65/200\n","45/45 [==============================] - 3s 71ms/step - loss: 0.4716 - accuracy: 0.8544 - val_loss: 1.0945 - val_accuracy: 0.6400\n","Epoch 66/200\n","45/45 [==============================] - 2s 52ms/step - loss: 0.4824 - accuracy: 0.8444 - val_loss: 1.1211 - val_accuracy: 0.6500\n","Epoch 67/200\n","45/45 [==============================] - 2s 48ms/step - loss: 0.4754 - accuracy: 0.8456 - val_loss: 1.0975 - val_accuracy: 0.6600\n","Epoch 68/200\n","45/45 [==============================] - 2s 44ms/step - loss: 0.4485 - accuracy: 0.8656 - val_loss: 1.1088 - val_accuracy: 0.6400\n","Epoch 69/200\n","45/45 [==============================] - 2s 43ms/step - loss: 0.4378 - accuracy: 0.8578 - val_loss: 1.0799 - val_accuracy: 0.6600\n","Epoch 70/200\n","45/45 [==============================] - 2s 48ms/step - loss: 0.4399 - accuracy: 0.8544 - val_loss: 1.0914 - val_accuracy: 0.6800\n","Epoch 71/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.4442 - accuracy: 0.8489 - val_loss: 1.1188 - val_accuracy: 0.6500\n","Epoch 72/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.4350 - accuracy: 0.8644 - val_loss: 1.1367 - val_accuracy: 0.6300\n","Epoch 73/200\n","45/45 [==============================] - 2s 55ms/step - loss: 0.4299 - accuracy: 0.8611 - val_loss: 1.0467 - val_accuracy: 0.7000\n","Epoch 74/200\n","45/45 [==============================] - 3s 58ms/step - loss: 0.4398 - accuracy: 0.8589 - val_loss: 1.0991 - val_accuracy: 0.6600\n","Epoch 75/200\n","45/45 [==============================] - 2s 48ms/step - loss: 0.4373 - accuracy: 0.8600 - val_loss: 1.1730 - val_accuracy: 0.6100\n","Epoch 76/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.4289 - accuracy: 0.8644 - val_loss: 1.0230 - val_accuracy: 0.6900\n","Epoch 77/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.4075 - accuracy: 0.8911 - val_loss: 1.1273 - val_accuracy: 0.6500\n","Epoch 78/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.3861 - accuracy: 0.8878 - val_loss: 1.1064 - val_accuracy: 0.6300\n","Epoch 79/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3974 - accuracy: 0.8789 - val_loss: 1.0901 - val_accuracy: 0.6700\n","Epoch 80/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.4055 - accuracy: 0.8756 - val_loss: 1.1196 - val_accuracy: 0.6300\n","Epoch 81/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.4109 - accuracy: 0.8800 - val_loss: 1.2037 - val_accuracy: 0.6100\n","Epoch 82/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3804 - accuracy: 0.8811 - val_loss: 1.1389 - val_accuracy: 0.6700\n","Epoch 83/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3813 - accuracy: 0.8822 - val_loss: 1.0976 - val_accuracy: 0.6700\n","Epoch 84/200\n","45/45 [==============================] - 2s 46ms/step - loss: 0.3672 - accuracy: 0.8933 - val_loss: 1.0981 - val_accuracy: 0.6900\n","Epoch 85/200\n","45/45 [==============================] - 2s 53ms/step - loss: 0.3519 - accuracy: 0.8856 - val_loss: 1.0771 - val_accuracy: 0.6400\n","Epoch 86/200\n","45/45 [==============================] - 3s 61ms/step - loss: 0.3669 - accuracy: 0.8822 - val_loss: 1.1447 - val_accuracy: 0.6300\n","Epoch 87/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3395 - accuracy: 0.9011 - val_loss: 1.1305 - val_accuracy: 0.6100\n","Epoch 88/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.3737 - accuracy: 0.8756 - val_loss: 1.1377 - val_accuracy: 0.6600\n","Epoch 89/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.3385 - accuracy: 0.8933 - val_loss: 1.1513 - val_accuracy: 0.5900\n","Epoch 90/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3442 - accuracy: 0.9022 - val_loss: 1.1562 - val_accuracy: 0.6300\n","Epoch 91/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3282 - accuracy: 0.9089 - val_loss: 1.1387 - val_accuracy: 0.6300\n","Epoch 92/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3489 - accuracy: 0.8889 - val_loss: 1.0814 - val_accuracy: 0.6500\n","Epoch 93/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.3186 - accuracy: 0.8989 - val_loss: 1.0848 - val_accuracy: 0.6500\n","Epoch 94/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.3100 - accuracy: 0.9044 - val_loss: 1.1638 - val_accuracy: 0.6600\n","Epoch 95/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.3080 - accuracy: 0.9033 - val_loss: 1.1806 - val_accuracy: 0.6400\n","Epoch 96/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2979 - accuracy: 0.9200 - val_loss: 1.1336 - val_accuracy: 0.6500\n","Epoch 97/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.3025 - accuracy: 0.9222 - val_loss: 1.1468 - val_accuracy: 0.6700\n","Epoch 98/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.3073 - accuracy: 0.9044 - val_loss: 1.1322 - val_accuracy: 0.6300\n","Epoch 99/200\n","45/45 [==============================] - 1s 32ms/step - loss: 0.3061 - accuracy: 0.9100 - val_loss: 1.1741 - val_accuracy: 0.6100\n","Epoch 100/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2777 - accuracy: 0.9267 - val_loss: 1.1793 - val_accuracy: 0.6300\n","Epoch 101/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2699 - accuracy: 0.9300 - val_loss: 1.1932 - val_accuracy: 0.6200\n","Epoch 102/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.3070 - accuracy: 0.9000 - val_loss: 1.1744 - val_accuracy: 0.6300\n","Epoch 103/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2818 - accuracy: 0.9133 - val_loss: 1.1480 - val_accuracy: 0.6700\n","Epoch 104/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.2724 - accuracy: 0.9256 - val_loss: 1.2137 - val_accuracy: 0.6300\n","Epoch 105/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2733 - accuracy: 0.9233 - val_loss: 1.2134 - val_accuracy: 0.6400\n","Epoch 106/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2687 - accuracy: 0.9289 - val_loss: 1.1561 - val_accuracy: 0.6300\n","Epoch 107/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2608 - accuracy: 0.9300 - val_loss: 1.2313 - val_accuracy: 0.6100\n","Epoch 108/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.2566 - accuracy: 0.9267 - val_loss: 1.2046 - val_accuracy: 0.6700\n","Epoch 109/200\n","45/45 [==============================] - 2s 53ms/step - loss: 0.2715 - accuracy: 0.9211 - val_loss: 1.1224 - val_accuracy: 0.6500\n","Epoch 110/200\n","45/45 [==============================] - 2s 49ms/step - loss: 0.2441 - accuracy: 0.9389 - val_loss: 1.2227 - val_accuracy: 0.6500\n","Epoch 111/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.2480 - accuracy: 0.9344 - val_loss: 1.1779 - val_accuracy: 0.6600\n","Epoch 112/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2332 - accuracy: 0.9411 - val_loss: 1.2382 - val_accuracy: 0.6400\n","Epoch 113/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2318 - accuracy: 0.9300 - val_loss: 1.1818 - val_accuracy: 0.6500\n","Epoch 114/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.2157 - accuracy: 0.9478 - val_loss: 1.2318 - val_accuracy: 0.6400\n","Epoch 115/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2275 - accuracy: 0.9444 - val_loss: 1.2524 - val_accuracy: 0.6400\n","Epoch 116/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2143 - accuracy: 0.9500 - val_loss: 1.0792 - val_accuracy: 0.6800\n","Epoch 117/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2000 - accuracy: 0.9556 - val_loss: 1.1924 - val_accuracy: 0.6500\n","Epoch 118/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.2130 - accuracy: 0.9411 - val_loss: 1.1689 - val_accuracy: 0.6400\n","Epoch 119/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2186 - accuracy: 0.9456 - val_loss: 1.2311 - val_accuracy: 0.6700\n","Epoch 120/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2015 - accuracy: 0.9533 - val_loss: 1.2815 - val_accuracy: 0.6600\n","Epoch 121/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2043 - accuracy: 0.9467 - val_loss: 1.2644 - val_accuracy: 0.6400\n","Epoch 122/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.2070 - accuracy: 0.9444 - val_loss: 1.2225 - val_accuracy: 0.6400\n","Epoch 123/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.2074 - accuracy: 0.9444 - val_loss: 1.1933 - val_accuracy: 0.6600\n","Epoch 124/200\n","45/45 [==============================] - 3s 58ms/step - loss: 0.2063 - accuracy: 0.9489 - val_loss: 1.2112 - val_accuracy: 0.6700\n","Epoch 125/200\n","45/45 [==============================] - 3s 76ms/step - loss: 0.1890 - accuracy: 0.9511 - val_loss: 1.2680 - val_accuracy: 0.6400\n","Epoch 126/200\n","45/45 [==============================] - 3s 59ms/step - loss: 0.1939 - accuracy: 0.9578 - val_loss: 1.3054 - val_accuracy: 0.6300\n","Epoch 127/200\n","45/45 [==============================] - 3s 61ms/step - loss: 0.1794 - accuracy: 0.9633 - val_loss: 1.2816 - val_accuracy: 0.6400\n","Epoch 128/200\n","45/45 [==============================] - 2s 43ms/step - loss: 0.1912 - accuracy: 0.9544 - val_loss: 1.3679 - val_accuracy: 0.6100\n","Epoch 129/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.1749 - accuracy: 0.9589 - val_loss: 1.3155 - val_accuracy: 0.6500\n","Epoch 130/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.1793 - accuracy: 0.9522 - val_loss: 1.2823 - val_accuracy: 0.6100\n","Epoch 131/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.1723 - accuracy: 0.9589 - val_loss: 1.3316 - val_accuracy: 0.6400\n","Epoch 132/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1598 - accuracy: 0.9644 - val_loss: 1.2625 - val_accuracy: 0.6400\n","Epoch 133/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1668 - accuracy: 0.9589 - val_loss: 1.2394 - val_accuracy: 0.6800\n","Epoch 134/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.1658 - accuracy: 0.9633 - val_loss: 1.2602 - val_accuracy: 0.6200\n","Epoch 135/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1487 - accuracy: 0.9722 - val_loss: 1.1807 - val_accuracy: 0.6700\n","Epoch 136/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1785 - accuracy: 0.9567 - val_loss: 1.2871 - val_accuracy: 0.6400\n","Epoch 137/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1472 - accuracy: 0.9678 - val_loss: 1.2648 - val_accuracy: 0.6300\n","Epoch 138/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1535 - accuracy: 0.9700 - val_loss: 1.3574 - val_accuracy: 0.6500\n","Epoch 139/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1522 - accuracy: 0.9667 - val_loss: 1.3730 - val_accuracy: 0.6700\n","Epoch 140/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1495 - accuracy: 0.9644 - val_loss: 1.2749 - val_accuracy: 0.6800\n","Epoch 141/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1389 - accuracy: 0.9700 - val_loss: 1.2343 - val_accuracy: 0.6700\n","Epoch 142/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1427 - accuracy: 0.9711 - val_loss: 1.2053 - val_accuracy: 0.6600\n","Epoch 143/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1452 - accuracy: 0.9644 - val_loss: 1.3769 - val_accuracy: 0.6500\n","Epoch 144/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1381 - accuracy: 0.9633 - val_loss: 1.2470 - val_accuracy: 0.6600\n","Epoch 145/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.1332 - accuracy: 0.9767 - val_loss: 1.3389 - val_accuracy: 0.6300\n","Epoch 146/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.1326 - accuracy: 0.9689 - val_loss: 1.2289 - val_accuracy: 0.6500\n","Epoch 147/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1322 - accuracy: 0.9733 - val_loss: 1.3004 - val_accuracy: 0.6200\n","Epoch 148/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.1336 - accuracy: 0.9700 - val_loss: 1.4400 - val_accuracy: 0.6400\n","Epoch 149/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1107 - accuracy: 0.9811 - val_loss: 1.3545 - val_accuracy: 0.6500\n","Epoch 150/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.1146 - accuracy: 0.9778 - val_loss: 1.3048 - val_accuracy: 0.6500\n","Epoch 151/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1227 - accuracy: 0.9733 - val_loss: 1.3287 - val_accuracy: 0.6700\n","Epoch 152/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1153 - accuracy: 0.9800 - val_loss: 1.4231 - val_accuracy: 0.6600\n","Epoch 153/200\n","45/45 [==============================] - 2s 33ms/step - loss: 0.1216 - accuracy: 0.9733 - val_loss: 1.4139 - val_accuracy: 0.6600\n","Epoch 154/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1138 - accuracy: 0.9800 - val_loss: 1.3905 - val_accuracy: 0.6600\n","Epoch 155/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1192 - accuracy: 0.9733 - val_loss: 1.4356 - val_accuracy: 0.6500\n","Epoch 156/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1195 - accuracy: 0.9744 - val_loss: 1.4025 - val_accuracy: 0.6800\n","Epoch 157/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0967 - accuracy: 0.9811 - val_loss: 1.3606 - val_accuracy: 0.6500\n","Epoch 158/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.1107 - accuracy: 0.9800 - val_loss: 1.3280 - val_accuracy: 0.6700\n","Epoch 159/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.0954 - accuracy: 0.9856 - val_loss: 1.3640 - val_accuracy: 0.6400\n","Epoch 160/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.1084 - accuracy: 0.9778 - val_loss: 1.4111 - val_accuracy: 0.6800\n","Epoch 161/200\n","45/45 [==============================] - 1s 33ms/step - loss: 0.1238 - accuracy: 0.9722 - val_loss: 1.3266 - val_accuracy: 0.6600\n","Epoch 162/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.0894 - accuracy: 0.9867 - val_loss: 1.4448 - val_accuracy: 0.6400\n","Epoch 163/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.0954 - accuracy: 0.9811 - val_loss: 1.3080 - val_accuracy: 0.6600\n","Epoch 164/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0996 - accuracy: 0.9811 - val_loss: 1.3492 - val_accuracy: 0.6500\n","Epoch 165/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0918 - accuracy: 0.9889 - val_loss: 1.3232 - val_accuracy: 0.6700\n","Epoch 166/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0870 - accuracy: 0.9811 - val_loss: 1.3947 - val_accuracy: 0.6600\n","Epoch 167/200\n","45/45 [==============================] - 2s 41ms/step - loss: 0.0908 - accuracy: 0.9867 - val_loss: 1.4044 - val_accuracy: 0.6600\n","Epoch 168/200\n","45/45 [==============================] - 3s 56ms/step - loss: 0.0879 - accuracy: 0.9844 - val_loss: 1.3550 - val_accuracy: 0.6600\n","Epoch 169/200\n","45/45 [==============================] - 2s 39ms/step - loss: 0.0872 - accuracy: 0.9867 - val_loss: 1.3785 - val_accuracy: 0.6400\n","Epoch 170/200\n","45/45 [==============================] - 3s 58ms/step - loss: 0.0837 - accuracy: 0.9856 - val_loss: 1.4424 - val_accuracy: 0.6500\n","Epoch 171/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0802 - accuracy: 0.9878 - val_loss: 1.4073 - val_accuracy: 0.6600\n","Epoch 172/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0770 - accuracy: 0.9878 - val_loss: 1.4061 - val_accuracy: 0.6500\n","Epoch 173/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0766 - accuracy: 0.9922 - val_loss: 1.3499 - val_accuracy: 0.6600\n","Epoch 174/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0798 - accuracy: 0.9856 - val_loss: 1.4231 - val_accuracy: 0.6300\n","Epoch 175/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0626 - accuracy: 0.9967 - val_loss: 1.5326 - val_accuracy: 0.6500\n","Epoch 176/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.0794 - accuracy: 0.9878 - val_loss: 1.4788 - val_accuracy: 0.6300\n","Epoch 177/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0751 - accuracy: 0.9889 - val_loss: 1.4485 - val_accuracy: 0.6400\n","Epoch 178/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.0722 - accuracy: 0.9889 - val_loss: 1.4859 - val_accuracy: 0.6300\n","Epoch 179/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0676 - accuracy: 0.9900 - val_loss: 1.4718 - val_accuracy: 0.6600\n","Epoch 180/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0762 - accuracy: 0.9911 - val_loss: 1.4106 - val_accuracy: 0.6600\n","Epoch 181/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0699 - accuracy: 0.9889 - val_loss: 1.4545 - val_accuracy: 0.6200\n","Epoch 182/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0757 - accuracy: 0.9878 - val_loss: 1.4383 - val_accuracy: 0.6500\n","Epoch 183/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0604 - accuracy: 0.9922 - val_loss: 1.4247 - val_accuracy: 0.6700\n","Epoch 184/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0678 - accuracy: 0.9878 - val_loss: 1.3844 - val_accuracy: 0.6800\n","Epoch 185/200\n","45/45 [==============================] - 2s 49ms/step - loss: 0.0706 - accuracy: 0.9844 - val_loss: 1.5542 - val_accuracy: 0.6600\n","Epoch 186/200\n","45/45 [==============================] - 2s 38ms/step - loss: 0.0740 - accuracy: 0.9867 - val_loss: 1.4424 - val_accuracy: 0.6700\n","Epoch 187/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0646 - accuracy: 0.9889 - val_loss: 1.4277 - val_accuracy: 0.6500\n","Epoch 188/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0524 - accuracy: 0.9956 - val_loss: 1.5052 - val_accuracy: 0.6500\n","Epoch 189/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0519 - accuracy: 0.9933 - val_loss: 1.4622 - val_accuracy: 0.7000\n","Epoch 190/200\n","45/45 [==============================] - 2s 49ms/step - loss: 0.0586 - accuracy: 0.9911 - val_loss: 1.5397 - val_accuracy: 0.6700\n","Epoch 191/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.0720 - accuracy: 0.9889 - val_loss: 1.4807 - val_accuracy: 0.6500\n","Epoch 192/200\n","45/45 [==============================] - 2s 34ms/step - loss: 0.0542 - accuracy: 0.9933 - val_loss: 1.5207 - val_accuracy: 0.6600\n","Epoch 193/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0511 - accuracy: 0.9933 - val_loss: 1.4684 - val_accuracy: 0.6700\n","Epoch 194/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0659 - accuracy: 0.9878 - val_loss: 1.4977 - val_accuracy: 0.6500\n","Epoch 195/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.0491 - accuracy: 0.9922 - val_loss: 1.4863 - val_accuracy: 0.7100\n","Epoch 196/200\n","45/45 [==============================] - 2s 35ms/step - loss: 0.0552 - accuracy: 0.9900 - val_loss: 1.4866 - val_accuracy: 0.6600\n","Epoch 197/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0469 - accuracy: 0.9944 - val_loss: 1.5466 - val_accuracy: 0.6600\n","Epoch 198/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0498 - accuracy: 0.9911 - val_loss: 1.5916 - val_accuracy: 0.6400\n","Epoch 199/200\n","45/45 [==============================] - 2s 37ms/step - loss: 0.0485 - accuracy: 0.9944 - val_loss: 1.5995 - val_accuracy: 0.6700\n","Epoch 200/200\n","45/45 [==============================] - 2s 36ms/step - loss: 0.0679 - accuracy: 0.9844 - val_loss: 1.5372 - val_accuracy: 0.6600\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Классификация композиции"],"metadata":{"id":"SaR7d72KqHRU"}},{"cell_type":"code","source":["# Выбираем песню для распознавания\n","songname = './genres/rock/rock.00000.au'\n","\n","# Загружаем файл для параметризации\n","y, sr = librosa.load(songname, mono=True, duration=30)\n","\n","# Параметризуем сигнал\n","out = get_features(y, sr)\n","\n","# Что мы тут делаем?\n","# Приводим в формат, который может принять на вход НС.\n","# Добавляем размерность, т.к. на вход НС подаётся массив из массивов, что описывают 37 параметров выявленных из каждой композиции.\n","out = np.array(out).reshape(1, len(out))\n","\n","# Берем ранее подготовленный Scaler и нормализуем\n","out = scaler.transform(out)\n","\n","# Делаем predict\n","prediction = model4.predict(out)\n","\n","predict_class = np.argmax(prediction[0])"],"metadata":{"id":"HkxNXPOzqRvY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669629755189,"user_tz":-180,"elapsed":897,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"1812eef6-8c91-4fa7-9988-54f06d3b8cb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 156ms/step\n"]}]},{"cell_type":"code","source":["# Вывод нейронки\n","print(\"Выход сети:\")\n","print(prediction[0])\n","print()\n","for i in range(10):\n","  print(i,\"->\",\"{:.40f}\".format(prediction[0][i]))\n","print()\n","\n","\n","print(\"Номер распознанного жанра: \", predict_class)\n","print(\"Распознанный жанр: \", genres[predict_class])"],"metadata":{"id":"Gf9asaVlq0p3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669629775701,"user_tz":-180,"elapsed":396,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"84bf89d0-debe-4bc8-b0d1-73f935af2871"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Выход сети:\n","[1.5012148e-01 2.7546770e-04 2.7991742e-02 7.0167878e-03 9.1934755e-02\n"," 5.7460084e-03 4.2722523e-02 2.5271745e-03 3.3846515e-04 6.7132562e-01]\n","\n","0 -> 0.1501214802265167236328125000000000000000\n","1 -> 0.0002754676970653235912322998046875000000\n","2 -> 0.0279917418956756591796875000000000000000\n","3 -> 0.0070167877711355686187744140625000000000\n","4 -> 0.0919347554445266723632812500000000000000\n","5 -> 0.0057460083626210689544677734375000000000\n","6 -> 0.0427225232124328613281250000000000000000\n","7 -> 0.0025271745398640632629394531250000000000\n","8 -> 0.0003384651499800384044647216796875000000\n","9 -> 0.6713256239891052246093750000000000000000\n","\n","Номер распознанного жанра:  9\n","Распознанный жанр:  rock\n"]}]},{"cell_type":"markdown","source":["# Идеи по улучшению НС\n","1) Увеличить датасет   \n","2) Увеличить число эпох   \n","3) Добавить слои (Dropout, Activation, BatchNormalizaation)  \n","4) Изменить число нейронов в слоях   \n","5) Изменить BatchSize и значения слоёв   \n","6) *Подробить аудиофайлы, чтобы увеличить их число"],"metadata":{"id":"lckUyFgDkVZT"}},{"cell_type":"markdown","source":["## Задание \n","1) Улучшить НС добавив слои   \n","2) Добавить блок с загрузкой файла для теста\n"],"metadata":{"id":"K_Wd1GiRm0tW"}},{"cell_type":"markdown","source":["## Улучшенная НС с доп. слоями"],"metadata":{"id":"PyDO-pvZmmgu"}},{"cell_type":"code","source":["# Порядок слоёв не влияет на результат\n","\n","# Activation\n","# Dropout\n","# BatchNormalization"],"metadata":{"id":"6jnMNFax6dt9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","#поменяем количество нейронов в слоях и добавим нормальзацию после кажного слоя\n","\n","input1 = Input((param_num,))\n","\n","x1 = Dense(1256, activation=\"elu\")(input1)\n","x1 = Dense(1256, activation=\"elu\")(x1)\n","\n","x1 = Dropout(0.2)(x1)\n","x1 = BatchNormalization()(x1)\n","\n","x2 = Dense(256, activation=\"elu\")(input1)\n","x2 = Dense(40, activation=\"relu\")(x2)\n","\n","x2 = Dropout(0.2)(x2)\n","x2 = BatchNormalization()(x2)\n","\n","x3 = Dense(256, activation=\"elu\")(input1)\n","x3 = Dense(200, activation=\"relu\")(x3)\n","\n","x3 = Dropout(0.2)(x3)\n","x3 = BatchNormalization()(x3)\n","\n","# У этих слоёв по 1 Dense слою.\n","# Чем больше Dense слоёв, тем сильнее затухает сигнал.\n","# Делая часть слоёв с большим количеством Dense слоёв, а часть с малым мы получим преимущество,\n","# Т.к. перед выходом все ветки НС будут сконкатенированы.\n","# Результаты лучшей ветки будут сохраняться для НС.\n","x4 = Dense(40, activation=\"relu\")(input1)\n","x5 = Dense(200, activation=\"relu\")(input1)\n","x6 = Dense(10, activation=\"relu\")(input1)\n","# К слоям выше не применяю Dropout и BatchNormalization\n","\n","x7 = Dense(256, activation=\"elu\")(input1)\n","x7 = Dense(1240, activation=\"relu\")(x7)\n","\n","x7 = Dropout(0.2)(x7)\n","x7 = BatchNormalization()(x7)\n","\n","x = concatenate([x1, x2, x3, x4, x5, x6, x7])\n","\n","x = BatchNormalization()(x)\n","x = Dense(10, activation='softmax')(x)\n","\n","model_improved = Model(input1, x)\n","\n","\n","\n","#компилируем\n","model_improved.compile(optimizer=RMSprop(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","#обучаем\n","history_improved = model.fit(xTrainS, yTrainS,\n","                    epochs=200,\n","                    batch_size=20,\n","                    validation_data=(xVal, yVal))\n","#выводим гарфик обучения\n","plt.plot(history_improved.history[\"accuracy\"])\n","plt.plot(history_improved.history[\"val_accuracy\"])\n","plt.show()\n","\n","\n","\n","'''"],"metadata":{"id":"IMiGdUSjkysi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Сохраним количество параметров, полученных при анализе аудио-сигнала\n","param_num = xTrain.shape[1]\n","print(\"Количество аудио-параметров:\", param_num)\n","print(\"Количество жанров:\", class_num)\n","\n","activation1 = 'relu'\n","\n","#поменяем количество нейронов в слоях и добавим нормальзацию после кажного слоя\n","input1 = Input((param_num,))\n","\n","x1 = Dense(1256, activation=\"elu\")(input1)\n","x1 = Dense(1256, activation=\"elu\")(x1)\n","x1 = BatchNormalization()(x1)\n","x1 = Dropout(0.1)(x1)\n","\n","x2 = Dense(256, activation=\"elu\")(input1)\n","x2 = Dense(40, activation=activation1)(x2)\n","x2 = BatchNormalization()(x2)\n","\n","x3 = Dense(256, activation=\"elu\")(input1)\n","x3 = Dense(200, activation=activation1)(x3)\n","x3 = BatchNormalization()(x3)\n","x3 = Dropout(0.1)(x3)\n","\n","x4 = Dense(40, activation=activation1)(input1)\n","x4 = BatchNormalization()(x4)\n","\n","x5 = Dense(200, activation=activation1)(input1)\n","x5 = BatchNormalization()(x5)\n","\n","x6 = Dense(10, activation=activation1)(input1)\n","x6 = BatchNormalization()(x6)\n","\n","x7 = Dense(256, activation=\"elu\")(input1)\n","x7 = Dense(1240, activation=activation1)(x7)\n","x7 = BatchNormalization()(x7)\n","x7 = Dropout(0.1)(x7)\n","\n","x = concatenate([x1, x2, x3, x4, x5, x6, x7])\n","\n","x = Dense(10, activation='softmax')(x)\n","\n","model_Nikita = Model(input1, x)\n","\n","#компилируем\n","model_Nikita.compile(optimizer=RMSprop(learning_rate=1e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","\n","#обучаем\n","history_model_Nikita = model_Nikita.fit(xTrainS, yTrainS,\n","                    epochs=40,\n","                    batch_size=20,\n","                    validation_data=(xVal, yVal))\n","\n","#выводим гарфик обучения\n","plt.plot(history_model_Nikita.history[\"accuracy\"])\n","plt.plot(history_model_Nikita.history[\"val_accuracy\"])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"1S-GzcIbCHiY","executionInfo":{"status":"ok","timestamp":1669644262313,"user_tz":-180,"elapsed":81147,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"1e598afd-401f-489c-f24c-349d5d0a5e7d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Количество аудио-параметров: 37\n","Количество жанров: 10\n","Epoch 1/40\n","225/225 [==============================] - 5s 9ms/step - loss: 1.4908 - accuracy: 0.5142 - val_loss: 1.2784 - val_accuracy: 0.5480\n","Epoch 2/40\n","225/225 [==============================] - 2s 8ms/step - loss: 1.0791 - accuracy: 0.6484 - val_loss: 1.0293 - val_accuracy: 0.6400\n","Epoch 3/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.9201 - accuracy: 0.6858 - val_loss: 1.0165 - val_accuracy: 0.6460\n","Epoch 4/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.7921 - accuracy: 0.7320 - val_loss: 1.1224 - val_accuracy: 0.6220\n","Epoch 5/40\n","225/225 [==============================] - 2s 11ms/step - loss: 0.6996 - accuracy: 0.7636 - val_loss: 0.9728 - val_accuracy: 0.6720\n","Epoch 6/40\n","225/225 [==============================] - 3s 11ms/step - loss: 0.6342 - accuracy: 0.7924 - val_loss: 0.9836 - val_accuracy: 0.6460\n","Epoch 7/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.5657 - accuracy: 0.8084 - val_loss: 1.0361 - val_accuracy: 0.6500\n","Epoch 8/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.5199 - accuracy: 0.8284 - val_loss: 1.0671 - val_accuracy: 0.6520\n","Epoch 9/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.4798 - accuracy: 0.8393 - val_loss: 1.0455 - val_accuracy: 0.6540\n","Epoch 10/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.4263 - accuracy: 0.8638 - val_loss: 1.1199 - val_accuracy: 0.6200\n","Epoch 11/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.4001 - accuracy: 0.8687 - val_loss: 1.0106 - val_accuracy: 0.6600\n","Epoch 12/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.3766 - accuracy: 0.8804 - val_loss: 1.0076 - val_accuracy: 0.6900\n","Epoch 13/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.3401 - accuracy: 0.8942 - val_loss: 1.0700 - val_accuracy: 0.6520\n","Epoch 14/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.3134 - accuracy: 0.9051 - val_loss: 1.0265 - val_accuracy: 0.6880\n","Epoch 15/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.2858 - accuracy: 0.9127 - val_loss: 1.0011 - val_accuracy: 0.6640\n","Epoch 16/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.2738 - accuracy: 0.9222 - val_loss: 1.0446 - val_accuracy: 0.6600\n","Epoch 17/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.2539 - accuracy: 0.9253 - val_loss: 1.0322 - val_accuracy: 0.6880\n","Epoch 18/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.2389 - accuracy: 0.9300 - val_loss: 1.0869 - val_accuracy: 0.6640\n","Epoch 19/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.2212 - accuracy: 0.9376 - val_loss: 1.0496 - val_accuracy: 0.6700\n","Epoch 20/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.2033 - accuracy: 0.9447 - val_loss: 1.0938 - val_accuracy: 0.6800\n","Epoch 21/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1917 - accuracy: 0.9498 - val_loss: 1.0897 - val_accuracy: 0.6780\n","Epoch 22/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1721 - accuracy: 0.9524 - val_loss: 1.0951 - val_accuracy: 0.6780\n","Epoch 23/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1681 - accuracy: 0.9533 - val_loss: 1.1638 - val_accuracy: 0.6500\n","Epoch 24/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1572 - accuracy: 0.9593 - val_loss: 1.1132 - val_accuracy: 0.6720\n","Epoch 25/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1463 - accuracy: 0.9618 - val_loss: 1.0765 - val_accuracy: 0.7120\n","Epoch 26/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1400 - accuracy: 0.9653 - val_loss: 1.1755 - val_accuracy: 0.6720\n","Epoch 27/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.1340 - accuracy: 0.9649 - val_loss: 1.1668 - val_accuracy: 0.6780\n","Epoch 28/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1193 - accuracy: 0.9729 - val_loss: 1.1706 - val_accuracy: 0.6800\n","Epoch 29/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1151 - accuracy: 0.9691 - val_loss: 1.2447 - val_accuracy: 0.6760\n","Epoch 30/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.1077 - accuracy: 0.9756 - val_loss: 1.1544 - val_accuracy: 0.6980\n","Epoch 31/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.0973 - accuracy: 0.9773 - val_loss: 1.1192 - val_accuracy: 0.6860\n","Epoch 32/40\n","225/225 [==============================] - 2s 9ms/step - loss: 0.0935 - accuracy: 0.9791 - val_loss: 1.2382 - val_accuracy: 0.6700\n","Epoch 33/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0964 - accuracy: 0.9749 - val_loss: 1.2931 - val_accuracy: 0.6700\n","Epoch 34/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0894 - accuracy: 0.9780 - val_loss: 1.2299 - val_accuracy: 0.6860\n","Epoch 35/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0856 - accuracy: 0.9796 - val_loss: 1.2388 - val_accuracy: 0.6880\n","Epoch 36/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0729 - accuracy: 0.9853 - val_loss: 1.2457 - val_accuracy: 0.7100\n","Epoch 37/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0717 - accuracy: 0.9844 - val_loss: 1.2290 - val_accuracy: 0.6980\n","Epoch 38/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0715 - accuracy: 0.9853 - val_loss: 1.3110 - val_accuracy: 0.6800\n","Epoch 39/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0670 - accuracy: 0.9880 - val_loss: 1.2473 - val_accuracy: 0.6920\n","Epoch 40/40\n","225/225 [==============================] - 2s 8ms/step - loss: 0.0657 - accuracy: 0.9864 - val_loss: 1.3184 - val_accuracy: 0.6720\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Выводим структуру НС\n","utils.plot_model(model_Nikita, 'model_Nikita.png', show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"W1XBhqGinnBz","executionInfo":{"status":"ok","timestamp":1669644268185,"user_tz":-180,"elapsed":787,"user":{"displayName":"Глеб Колонин","userId":"16800121630135430864"}},"outputId":"5e1dbd71-9a97-4a4b-9a42-ef1604f284f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["## Загрузка файла для теста"],"metadata":{"id":"qXV7bubesOSm"}},{"cell_type":"code","source":["from google.colab import files\n","set_files = set(os.listdir())\n","files.upload()\n","set_new_files = set(os.listdir())\n","\n","set_new_files -= set_files\n","\n","print(set_new_files) # Файл, что был загружен"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":55},"id":"i578aRf8piNN","outputId":"6c225157-df08-4f00-f6a4-7bbb56723e2e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-0b0f3edd-a723-45b7-a502-aba53a6d6ba6\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-0b0f3edd-a723-45b7-a502-aba53a6d6ba6\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}}]},{"cell_type":"code","source":["# Загружаем файл для параметризации\n","y, sr = librosa.load(set_new_files.pop(), mono=True, duration=30)\n","\n","# # Параметризуем сигнал\n","out = get_features(y, sr)\n","\n","# # Приводим в формат, который может принять на вход НС.\n","# # Добавляем размерность, т.к. на вход НС подаётся массив из массивов, что описывают 37 параметров выявленных из каждой композиции.\n","out = np.array(out).reshape(1, len(out))\n","\n","# # Берем ранее подготовленный Scaler и нормализуем\n","out = scaler.transform(out)\n","\n","# # Делаем predict\n","prediction = model_Nikita.predict(out)\n","\n","predict_class = np.argmax(prediction[0])"],"metadata":{"id":"-i9be11638B0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Вывод нейронки\n","print(\"Выход сети:\")\n","print(prediction[0])\n","print()\n","for i in range(10):\n","  print(i,\"->\",\"{:.40f}\".format(prediction[0][i]))\n","print()\n","\n","print(\"Номер распознанного жанра: \", predict_class)\n","print(\"Распознанный жанр: \", genres[predict_class])"],"metadata":{"id":"iGrafkS84CVN"},"execution_count":null,"outputs":[]}]}